//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace labelPrint.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class siixsem_sys_lblPrint_dbEntities : DbContext
    {
        public siixsem_sys_lblPrint_dbEntities()
            : base("name=siixsem_sys_lblPrint_dbEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<siixseem_event_log> siixseem_event_log { get; set; }
        public virtual DbSet<siixseem_events_t> siixseem_events_t { get; set; }
        public virtual DbSet<siixsem_datamatrix_t> siixsem_datamatrix_t { get; set; }
        public virtual DbSet<siixsem_densities_t> siixsem_densities_t { get; set; }
        public virtual DbSet<siixsem_DjHist_t> siixsem_DjHist_t { get; set; }
        public virtual DbSet<siixsem_djs_t> siixsem_djs_t { get; set; }
        public virtual DbSet<siixsem_failInsOr_t> siixsem_failInsOr_t { get; set; }
        public virtual DbSet<siixsem_forBackFlush_t> siixsem_forBackFlush_t { get; set; }
        public virtual DbSet<siixsem_labelSerials_td> siixsem_labelSerials_td { get; set; }
        public virtual DbSet<siixsem_labelSerialsLed2_td> siixsem_labelSerialsLed2_td { get; set; }
        public virtual DbSet<siixsem_lblFolios_td> siixsem_lblFolios_td { get; set; }
        public virtual DbSet<siixsem_lblModel_spec_Led2_td> siixsem_lblModel_spec_Led2_td { get; set; }
        public virtual DbSet<siixsem_lblModel_spec_td> siixsem_lblModel_spec_td { get; set; }
        public virtual DbSet<siixsem_lblModel_spec_td_test> siixsem_lblModel_spec_td_test { get; set; }
        public virtual DbSet<siixsem_lblModels_td> siixsem_lblModels_td { get; set; }
        public virtual DbSet<siixsem_lblSizes_t> siixsem_lblSizes_t { get; set; }
        public virtual DbSet<siixsem_lblTemplates_t> siixsem_lblTemplates_t { get; set; }
        public virtual DbSet<siixsem_lblZPL_t> siixsem_lblZPL_t { get; set; }
        public virtual DbSet<siixsem_pcb_count_m_td> siixsem_pcb_count_m_td { get; set; }
        public virtual DbSet<siixsem_pcb_count_sm_td> siixsem_pcb_count_sm_td { get; set; }
        public virtual DbSet<siixsem_pcbSerials_Led2_td> siixsem_pcbSerials_Led2_td { get; set; }
        public virtual DbSet<siixsem_pcbSerials_td> siixsem_pcbSerials_td { get; set; }
        public virtual DbSet<siixsem_reviews_t> siixsem_reviews_t { get; set; }
        public virtual DbSet<siixsem_revModel_td> siixsem_revModel_td { get; set; }
        public virtual DbSet<siixsem_ledSimos_t> siixsem_ledSimos_t { get; set; }
    
        public virtual ObjectResult<checkDateDJ_Result> checkDateDJ(Nullable<int> idModel, string dateDJ)
        {
            var idModelParameter = idModel.HasValue ?
                new ObjectParameter("idModel", idModel) :
                new ObjectParameter("idModel", typeof(int));
    
            var dateDJParameter = dateDJ != null ?
                new ObjectParameter("dateDJ", dateDJ) :
                new ObjectParameter("dateDJ", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<checkDateDJ_Result>("checkDateDJ", idModelParameter, dateDJParameter);
        }
    
        public virtual ObjectResult<checkDateDJLed2_Result> checkDateDJLed2(Nullable<int> idModel, string dateDJ, Nullable<int> idSide)
        {
            var idModelParameter = idModel.HasValue ?
                new ObjectParameter("idModel", idModel) :
                new ObjectParameter("idModel", typeof(int));
    
            var dateDJParameter = dateDJ != null ?
                new ObjectParameter("dateDJ", dateDJ) :
                new ObjectParameter("dateDJ", typeof(string));
    
            var idSideParameter = idSide.HasValue ?
                new ObjectParameter("idSide", idSide) :
                new ObjectParameter("idSide", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<checkDateDJLed2_Result>("checkDateDJLed2", idModelParameter, dateDJParameter, idSideParameter);
        }
    
        public virtual ObjectResult<checkPartM_Result> checkPartM(Nullable<int> idmodel, string djGroup, Nullable<int> qtyPCB, Nullable<int> idFlx, Nullable<int> idColor, Nullable<int> idVolt)
        {
            var idmodelParameter = idmodel.HasValue ?
                new ObjectParameter("idmodel", idmodel) :
                new ObjectParameter("idmodel", typeof(int));
    
            var djGroupParameter = djGroup != null ?
                new ObjectParameter("djGroup", djGroup) :
                new ObjectParameter("djGroup", typeof(string));
    
            var qtyPCBParameter = qtyPCB.HasValue ?
                new ObjectParameter("qtyPCB", qtyPCB) :
                new ObjectParameter("qtyPCB", typeof(int));
    
            var idFlxParameter = idFlx.HasValue ?
                new ObjectParameter("idFlx", idFlx) :
                new ObjectParameter("idFlx", typeof(int));
    
            var idColorParameter = idColor.HasValue ?
                new ObjectParameter("idColor", idColor) :
                new ObjectParameter("idColor", typeof(int));
    
            var idVoltParameter = idVolt.HasValue ?
                new ObjectParameter("idVolt", idVolt) :
                new ObjectParameter("idVolt", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<checkPartM_Result>("checkPartM", idmodelParameter, djGroupParameter, qtyPCBParameter, idFlxParameter, idColorParameter, idVoltParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> existDjGroup(string nd)
        {
            var ndParameter = nd != null ?
                new ObjectParameter("nd", nd) :
                new ObjectParameter("nd", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("existDjGroup", ndParameter);
        }
    
        public virtual int existsLed(string numPart)
        {
            var numPartParameter = numPart != null ?
                new ObjectParameter("numPart", numPart) :
                new ObjectParameter("numPart", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("existsLed", numPartParameter);
        }
    
        public virtual ObjectResult<generate_lblCode_template_Result> generate_lblCode_template(Nullable<int> idModel, Nullable<int> idSide, Nullable<int> idFlx, Nullable<int> idVolt, Nullable<int> idRev, Nullable<int> idColor)
        {
            var idModelParameter = idModel.HasValue ?
                new ObjectParameter("idModel", idModel) :
                new ObjectParameter("idModel", typeof(int));
    
            var idSideParameter = idSide.HasValue ?
                new ObjectParameter("idSide", idSide) :
                new ObjectParameter("idSide", typeof(int));
    
            var idFlxParameter = idFlx.HasValue ?
                new ObjectParameter("idFlx", idFlx) :
                new ObjectParameter("idFlx", typeof(int));
    
            var idVoltParameter = idVolt.HasValue ?
                new ObjectParameter("idVolt", idVolt) :
                new ObjectParameter("idVolt", typeof(int));
    
            var idRevParameter = idRev.HasValue ?
                new ObjectParameter("idRev", idRev) :
                new ObjectParameter("idRev", typeof(int));
    
            var idColorParameter = idColor.HasValue ?
                new ObjectParameter("idColor", idColor) :
                new ObjectParameter("idColor", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<generate_lblCode_template_Result>("generate_lblCode_template", idModelParameter, idSideParameter, idFlxParameter, idVoltParameter, idRevParameter, idColorParameter);
        }
    
        public virtual ObjectResult<generate_lblCode_template2_Result> generate_lblCode_template2(Nullable<int> idModel, Nullable<int> idSide, Nullable<int> idFlx, Nullable<int> idVolt, Nullable<int> idRev, Nullable<int> idColor, Nullable<System.DateTime> dateDJ)
        {
            var idModelParameter = idModel.HasValue ?
                new ObjectParameter("idModel", idModel) :
                new ObjectParameter("idModel", typeof(int));
    
            var idSideParameter = idSide.HasValue ?
                new ObjectParameter("idSide", idSide) :
                new ObjectParameter("idSide", typeof(int));
    
            var idFlxParameter = idFlx.HasValue ?
                new ObjectParameter("idFlx", idFlx) :
                new ObjectParameter("idFlx", typeof(int));
    
            var idVoltParameter = idVolt.HasValue ?
                new ObjectParameter("idVolt", idVolt) :
                new ObjectParameter("idVolt", typeof(int));
    
            var idRevParameter = idRev.HasValue ?
                new ObjectParameter("idRev", idRev) :
                new ObjectParameter("idRev", typeof(int));
    
            var idColorParameter = idColor.HasValue ?
                new ObjectParameter("idColor", idColor) :
                new ObjectParameter("idColor", typeof(int));
    
            var dateDJParameter = dateDJ.HasValue ?
                new ObjectParameter("dateDJ", dateDJ) :
                new ObjectParameter("dateDJ", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<generate_lblCode_template2_Result>("generate_lblCode_template2", idModelParameter, idSideParameter, idFlxParameter, idVoltParameter, idRevParameter, idColorParameter, dateDJParameter);
        }
    
        public virtual ObjectResult<generate_lblCode_templateLed2_Result> generate_lblCode_templateLed2(Nullable<int> idModel, Nullable<int> idSide, Nullable<int> idFlx, Nullable<int> idVolt, Nullable<int> idRev, Nullable<int> idColor, Nullable<System.DateTime> dateDJ, Nullable<int> idFlx1, Nullable<int> idVolt1, Nullable<int> idColor1)
        {
            var idModelParameter = idModel.HasValue ?
                new ObjectParameter("idModel", idModel) :
                new ObjectParameter("idModel", typeof(int));
    
            var idSideParameter = idSide.HasValue ?
                new ObjectParameter("idSide", idSide) :
                new ObjectParameter("idSide", typeof(int));
    
            var idFlxParameter = idFlx.HasValue ?
                new ObjectParameter("idFlx", idFlx) :
                new ObjectParameter("idFlx", typeof(int));
    
            var idVoltParameter = idVolt.HasValue ?
                new ObjectParameter("idVolt", idVolt) :
                new ObjectParameter("idVolt", typeof(int));
    
            var idRevParameter = idRev.HasValue ?
                new ObjectParameter("idRev", idRev) :
                new ObjectParameter("idRev", typeof(int));
    
            var idColorParameter = idColor.HasValue ?
                new ObjectParameter("idColor", idColor) :
                new ObjectParameter("idColor", typeof(int));
    
            var dateDJParameter = dateDJ.HasValue ?
                new ObjectParameter("dateDJ", dateDJ) :
                new ObjectParameter("dateDJ", typeof(System.DateTime));
    
            var idFlx1Parameter = idFlx1.HasValue ?
                new ObjectParameter("idFlx1", idFlx1) :
                new ObjectParameter("idFlx1", typeof(int));
    
            var idVolt1Parameter = idVolt1.HasValue ?
                new ObjectParameter("idVolt1", idVolt1) :
                new ObjectParameter("idVolt1", typeof(int));
    
            var idColor1Parameter = idColor1.HasValue ?
                new ObjectParameter("idColor1", idColor1) :
                new ObjectParameter("idColor1", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<generate_lblCode_templateLed2_Result>("generate_lblCode_templateLed2", idModelParameter, idSideParameter, idFlxParameter, idVoltParameter, idRevParameter, idColorParameter, dateDJParameter, idFlx1Parameter, idVolt1Parameter, idColor1Parameter);
        }
    
        public virtual ObjectResult<generate_lblCtemplate_Rayben_Result> generate_lblCtemplate_Rayben(Nullable<int> idModel, Nullable<int> idSide, Nullable<int> idFlx, Nullable<int> idVolt, Nullable<int> idRev, Nullable<int> idColor)
        {
            var idModelParameter = idModel.HasValue ?
                new ObjectParameter("idModel", idModel) :
                new ObjectParameter("idModel", typeof(int));
    
            var idSideParameter = idSide.HasValue ?
                new ObjectParameter("idSide", idSide) :
                new ObjectParameter("idSide", typeof(int));
    
            var idFlxParameter = idFlx.HasValue ?
                new ObjectParameter("idFlx", idFlx) :
                new ObjectParameter("idFlx", typeof(int));
    
            var idVoltParameter = idVolt.HasValue ?
                new ObjectParameter("idVolt", idVolt) :
                new ObjectParameter("idVolt", typeof(int));
    
            var idRevParameter = idRev.HasValue ?
                new ObjectParameter("idRev", idRev) :
                new ObjectParameter("idRev", typeof(int));
    
            var idColorParameter = idColor.HasValue ?
                new ObjectParameter("idColor", idColor) :
                new ObjectParameter("idColor", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<generate_lblCtemplate_Rayben_Result>("generate_lblCtemplate_Rayben", idModelParameter, idSideParameter, idFlxParameter, idVoltParameter, idRevParameter, idColorParameter);
        }
    
        public virtual ObjectResult<generateExcelSimos_Result> generateExcelSimos(string djNo)
        {
            var djNoParameter = djNo != null ?
                new ObjectParameter("DjNo", djNo) :
                new ObjectParameter("DjNo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<generateExcelSimos_Result>("generateExcelSimos", djNoParameter);
        }
    
        public virtual ObjectResult<generateExcelSimos_Led2_Result> generateExcelSimos_Led2(string djNo)
        {
            var djNoParameter = djNo != null ?
                new ObjectParameter("DjNo", djNo) :
                new ObjectParameter("DjNo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<generateExcelSimos_Led2_Result>("generateExcelSimos_Led2", djNoParameter);
        }
    
        public virtual ObjectResult<string> generateExcelSimos_Led2V2(string djNo)
        {
            var djNoParameter = djNo != null ?
                new ObjectParameter("DjNo", djNo) :
                new ObjectParameter("DjNo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("generateExcelSimos_Led2V2", djNoParameter);
        }
    
        public virtual ObjectResult<string> generateExcelSimosV2(string djNo)
        {
            var djNoParameter = djNo != null ?
                new ObjectParameter("DjNo", djNo) :
                new ObjectParameter("DjNo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("generateExcelSimosV2", djNoParameter);
        }
    
        public virtual ObjectResult<generateOldExcelSimos_Result> generateOldExcelSimos(string djNo)
        {
            var djNoParameter = djNo != null ?
                new ObjectParameter("DjNo", djNo) :
                new ObjectParameter("DjNo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<generateOldExcelSimos_Result>("generateOldExcelSimos", djNoParameter);
        }
    
        public virtual ObjectResult<generateSerialSpec_Result> generateSerialSpec(Nullable<int> idModel, Nullable<int> idSide, Nullable<int> idFlx, Nullable<int> idVolt, Nullable<int> idRev, Nullable<int> idColor, Nullable<System.DateTime> date)
        {
            var idModelParameter = idModel.HasValue ?
                new ObjectParameter("idModel", idModel) :
                new ObjectParameter("idModel", typeof(int));
    
            var idSideParameter = idSide.HasValue ?
                new ObjectParameter("idSide", idSide) :
                new ObjectParameter("idSide", typeof(int));
    
            var idFlxParameter = idFlx.HasValue ?
                new ObjectParameter("idFlx", idFlx) :
                new ObjectParameter("idFlx", typeof(int));
    
            var idVoltParameter = idVolt.HasValue ?
                new ObjectParameter("idVolt", idVolt) :
                new ObjectParameter("idVolt", typeof(int));
    
            var idRevParameter = idRev.HasValue ?
                new ObjectParameter("idRev", idRev) :
                new ObjectParameter("idRev", typeof(int));
    
            var idColorParameter = idColor.HasValue ?
                new ObjectParameter("idColor", idColor) :
                new ObjectParameter("idColor", typeof(int));
    
            var dateParameter = date.HasValue ?
                new ObjectParameter("date", date) :
                new ObjectParameter("date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<generateSerialSpec_Result>("generateSerialSpec", idModelParameter, idSideParameter, idFlxParameter, idVoltParameter, idRevParameter, idColorParameter, dateParameter);
        }
    
        public virtual ObjectResult<generateSerialSpecLed2_Result> generateSerialSpecLed2(Nullable<int> idModel, Nullable<int> idSide, Nullable<int> idFlx, Nullable<int> idVolt, Nullable<int> idRev, Nullable<int> idColor, Nullable<System.DateTime> dateDJ, Nullable<int> idFlx1, Nullable<int> idVolt1, Nullable<int> idColor1)
        {
            var idModelParameter = idModel.HasValue ?
                new ObjectParameter("idModel", idModel) :
                new ObjectParameter("idModel", typeof(int));
    
            var idSideParameter = idSide.HasValue ?
                new ObjectParameter("idSide", idSide) :
                new ObjectParameter("idSide", typeof(int));
    
            var idFlxParameter = idFlx.HasValue ?
                new ObjectParameter("idFlx", idFlx) :
                new ObjectParameter("idFlx", typeof(int));
    
            var idVoltParameter = idVolt.HasValue ?
                new ObjectParameter("idVolt", idVolt) :
                new ObjectParameter("idVolt", typeof(int));
    
            var idRevParameter = idRev.HasValue ?
                new ObjectParameter("idRev", idRev) :
                new ObjectParameter("idRev", typeof(int));
    
            var idColorParameter = idColor.HasValue ?
                new ObjectParameter("idColor", idColor) :
                new ObjectParameter("idColor", typeof(int));
    
            var dateDJParameter = dateDJ.HasValue ?
                new ObjectParameter("dateDJ", dateDJ) :
                new ObjectParameter("dateDJ", typeof(System.DateTime));
    
            var idFlx1Parameter = idFlx1.HasValue ?
                new ObjectParameter("idFlx1", idFlx1) :
                new ObjectParameter("idFlx1", typeof(int));
    
            var idVolt1Parameter = idVolt1.HasValue ?
                new ObjectParameter("idVolt1", idVolt1) :
                new ObjectParameter("idVolt1", typeof(int));
    
            var idColor1Parameter = idColor1.HasValue ?
                new ObjectParameter("idColor1", idColor1) :
                new ObjectParameter("idColor1", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<generateSerialSpecLed2_Result>("generateSerialSpecLed2", idModelParameter, idSideParameter, idFlxParameter, idVoltParameter, idRevParameter, idColorParameter, dateDJParameter, idFlx1Parameter, idVolt1Parameter, idColor1Parameter);
        }
    
        public virtual ObjectResult<getBinesByBatch_Result> getBinesByBatch(string batchID)
        {
            var batchIDParameter = batchID != null ?
                new ObjectParameter("batchID", batchID) :
                new ObjectParameter("batchID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getBinesByBatch_Result>("getBinesByBatch", batchIDParameter);
        }
    
        public virtual ObjectResult<getBinesDJ_Result> getBinesDJ(string djNumber)
        {
            var djNumberParameter = djNumber != null ?
                new ObjectParameter("djNumber", djNumber) :
                new ObjectParameter("djNumber", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getBinesDJ_Result>("getBinesDJ", djNumberParameter);
        }
    
        public virtual ObjectResult<string> getDjNoFCTByDJGroup(string djgroup)
        {
            var djgroupParameter = djgroup != null ?
                new ObjectParameter("djgroup", djgroup) :
                new ObjectParameter("djgroup", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("getDjNoFCTByDJGroup", djgroupParameter);
        }
    
        public virtual ObjectResult<getDjNoMANUByDJGroup_Result> getDjNoMANUByDJGroup(string djgroup)
        {
            var djgroupParameter = djgroup != null ?
                new ObjectParameter("djgroup", djgroup) :
                new ObjectParameter("djgroup", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getDjNoMANUByDJGroup_Result>("getDjNoMANUByDJGroup", djgroupParameter);
        }
    
        public virtual ObjectResult<string> getDjNoSMTByDJGroup(string djgroup, string side)
        {
            var djgroupParameter = djgroup != null ?
                new ObjectParameter("djgroup", djgroup) :
                new ObjectParameter("djgroup", typeof(string));
    
            var sideParameter = side != null ?
                new ObjectParameter("side", side) :
                new ObjectParameter("side", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("getDjNoSMTByDJGroup", djgroupParameter, sideParameter);
        }
    
        public virtual ObjectResult<getDJNumByGrp_Result> getDJNumByGrp(string group)
        {
            var groupParameter = group != null ?
                new ObjectParameter("group", group) :
                new ObjectParameter("group", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getDJNumByGrp_Result>("getDJNumByGrp", groupParameter);
        }
    
        public virtual ObjectResult<getDjQty_Result> getDjQty(Nullable<int> idModel, string djNo)
        {
            var idModelParameter = idModel.HasValue ?
                new ObjectParameter("idModel", idModel) :
                new ObjectParameter("idModel", typeof(int));
    
            var djNoParameter = djNo != null ?
                new ObjectParameter("djNo", djNo) :
                new ObjectParameter("djNo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getDjQty_Result>("getDjQty", idModelParameter, djNoParameter);
        }
    
        public virtual ObjectResult<getDjQtyPart_Result> getDjQtyPart(Nullable<int> idModel, string djNo, Nullable<int> pcbDjQty)
        {
            var idModelParameter = idModel.HasValue ?
                new ObjectParameter("idModel", idModel) :
                new ObjectParameter("idModel", typeof(int));
    
            var djNoParameter = djNo != null ?
                new ObjectParameter("djNo", djNo) :
                new ObjectParameter("djNo", typeof(string));
    
            var pcbDjQtyParameter = pcbDjQty.HasValue ?
                new ObjectParameter("pcbDjQty", pcbDjQty) :
                new ObjectParameter("pcbDjQty", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getDjQtyPart_Result>("getDjQtyPart", idModelParameter, djNoParameter, pcbDjQtyParameter);
        }
    
        public virtual ObjectResult<string> getDJsToUpload()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("getDJsToUpload");
        }
    
        public virtual int getFlxCVByNPart(string lotNumber, ObjectParameter flux, ObjectParameter color, ObjectParameter volt)
        {
            var lotNumberParameter = lotNumber != null ?
                new ObjectParameter("lotNumber", lotNumber) :
                new ObjectParameter("lotNumber", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("getFlxCVByNPart", lotNumberParameter, flux, color, volt);
        }
    
        public virtual ObjectResult<getIdsDJSpecByNoDJ_Result> getIdsDJSpecByNoDJ(string noDj, Nullable<int> idModel)
        {
            var noDjParameter = noDj != null ?
                new ObjectParameter("NoDj", noDj) :
                new ObjectParameter("NoDj", typeof(string));
    
            var idModelParameter = idModel.HasValue ?
                new ObjectParameter("idModel", idModel) :
                new ObjectParameter("idModel", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getIdsDJSpecByNoDJ_Result>("getIdsDJSpecByNoDJ", noDjParameter, idModelParameter);
        }
    
        public virtual ObjectResult<getInfoPrintLabelbyDJ_Result> getInfoPrintLabelbyDJ(string dj_no)
        {
            var dj_noParameter = dj_no != null ?
                new ObjectParameter("dj_no", dj_no) :
                new ObjectParameter("dj_no", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getInfoPrintLabelbyDJ_Result>("getInfoPrintLabelbyDJ", dj_noParameter);
        }
    
        public virtual ObjectResult<getInfoPrintLabelbyDJV2_Result> getInfoPrintLabelbyDJV2(string dj_no)
        {
            var dj_noParameter = dj_no != null ?
                new ObjectParameter("dj_no", dj_no) :
                new ObjectParameter("dj_no", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getInfoPrintLabelbyDJV2_Result>("getInfoPrintLabelbyDJV2", dj_noParameter);
        }
    
        public virtual ObjectResult<getInfoSerial_Result> getInfoSerial(string serial)
        {
            var serialParameter = serial != null ?
                new ObjectParameter("serial", serial) :
                new ObjectParameter("serial", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getInfoSerial_Result>("getInfoSerial", serialParameter);
        }
    
        public virtual ObjectResult<getLabelByModel_Result> getLabelByModel(Nullable<int> idModel, string bin, string color, string voltage)
        {
            var idModelParameter = idModel.HasValue ?
                new ObjectParameter("idModel", idModel) :
                new ObjectParameter("idModel", typeof(int));
    
            var binParameter = bin != null ?
                new ObjectParameter("bin", bin) :
                new ObjectParameter("bin", typeof(string));
    
            var colorParameter = color != null ?
                new ObjectParameter("color", color) :
                new ObjectParameter("color", typeof(string));
    
            var voltageParameter = voltage != null ?
                new ObjectParameter("voltage", voltage) :
                new ObjectParameter("voltage", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getLabelByModel_Result>("getLabelByModel", idModelParameter, binParameter, colorParameter, voltageParameter);
        }
    
        public virtual ObjectResult<getLabels_Result> getLabels()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getLabels_Result>("getLabels");
        }
    
        public virtual ObjectResult<getLabelsToPrint_Result> getLabelsToPrint(string fechaIni, string fechaFin)
        {
            var fechaIniParameter = fechaIni != null ?
                new ObjectParameter("fechaIni", fechaIni) :
                new ObjectParameter("fechaIni", typeof(string));
    
            var fechaFinParameter = fechaFin != null ?
                new ObjectParameter("fechaFin", fechaFin) :
                new ObjectParameter("fechaFin", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getLabelsToPrint_Result>("getLabelsToPrint", fechaIniParameter, fechaFinParameter);
        }
    
        public virtual ObjectResult<getLabelsToPrintV2_Result> getLabelsToPrintV2(string fechaIni, string fechaFin)
        {
            var fechaIniParameter = fechaIni != null ?
                new ObjectParameter("fechaIni", fechaIni) :
                new ObjectParameter("fechaIni", typeof(string));
    
            var fechaFinParameter = fechaFin != null ?
                new ObjectParameter("fechaFin", fechaFin) :
                new ObjectParameter("fechaFin", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getLabelsToPrintV2_Result>("getLabelsToPrintV2", fechaIniParameter, fechaFinParameter);
        }
    
        public virtual ObjectResult<getLastSerial_Result> getLastSerial(Nullable<int> idModel)
        {
            var idModelParameter = idModel.HasValue ?
                new ObjectParameter("idModel", idModel) :
                new ObjectParameter("idModel", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getLastSerial_Result>("getLastSerial", idModelParameter);
        }
    
        public virtual ObjectResult<getLastSerialByDate_Result> getLastSerialByDate(Nullable<int> idModel, string date)
        {
            var idModelParameter = idModel.HasValue ?
                new ObjectParameter("idModel", idModel) :
                new ObjectParameter("idModel", typeof(int));
    
            var dateParameter = date != null ?
                new ObjectParameter("date", date) :
                new ObjectParameter("date", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getLastSerialByDate_Result>("getLastSerialByDate", idModelParameter, dateParameter);
        }
    
        public virtual ObjectResult<getLastSerialLed2_Result> getLastSerialLed2(Nullable<int> idModel)
        {
            var idModelParameter = idModel.HasValue ?
                new ObjectParameter("idModel", idModel) :
                new ObjectParameter("idModel", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getLastSerialLed2_Result>("getLastSerialLed2", idModelParameter);
        }
    
        public virtual ObjectResult<getModelByDJ_Result> getModelByDJ(string dj_no)
        {
            var dj_noParameter = dj_no != null ?
                new ObjectParameter("dj_no", dj_no) :
                new ObjectParameter("dj_no", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getModelByDJ_Result>("getModelByDJ", dj_noParameter);
        }
    
        public virtual ObjectResult<getModelsReview_Result> getModelsReview()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getModelsReview_Result>("getModelsReview");
        }
    
        public virtual ObjectResult<getPrintedDJs_Result> getPrintedDJs()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getPrintedDJs_Result>("getPrintedDJs");
        }
    
        public virtual ObjectResult<getReviewByIdModel_Result> getReviewByIdModel(Nullable<int> idModel)
        {
            var idModelParameter = idModel.HasValue ?
                new ObjectParameter("idModel", idModel) :
                new ObjectParameter("idModel", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getReviewByIdModel_Result>("getReviewByIdModel", idModelParameter);
        }
    
        public virtual ObjectResult<getReviews_Result> getReviews()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getReviews_Result>("getReviews");
        }
    
        public virtual ObjectResult<getSidebySerial_Result> getSidebySerial(string serial, string batchId)
        {
            var serialParameter = serial != null ?
                new ObjectParameter("serial", serial) :
                new ObjectParameter("serial", typeof(string));
    
            var batchIdParameter = batchId != null ?
                new ObjectParameter("batchId", batchId) :
                new ObjectParameter("batchId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getSidebySerial_Result>("getSidebySerial", serialParameter, batchIdParameter);
        }
    
        public virtual ObjectResult<getSpecialLabelsToPrint_Result> getSpecialLabelsToPrint(string fechaIni, string fechaFin)
        {
            var fechaIniParameter = fechaIni != null ?
                new ObjectParameter("fechaIni", fechaIni) :
                new ObjectParameter("fechaIni", typeof(string));
    
            var fechaFinParameter = fechaFin != null ?
                new ObjectParameter("fechaFin", fechaFin) :
                new ObjectParameter("fechaFin", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getSpecialLabelsToPrint_Result>("getSpecialLabelsToPrint", fechaIniParameter, fechaFinParameter);
        }
    
        public virtual ObjectResult<insertAsignModel_Result> insertAsignModel(Nullable<int> id_model, Nullable<int> id_label)
        {
            var id_modelParameter = id_model.HasValue ?
                new ObjectParameter("id_model", id_model) :
                new ObjectParameter("id_model", typeof(int));
    
            var id_labelParameter = id_label.HasValue ?
                new ObjectParameter("id_label", id_label) :
                new ObjectParameter("id_label", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<insertAsignModel_Result>("insertAsignModel", id_modelParameter, id_labelParameter);
        }
    
        public virtual ObjectResult<insertAsignRevModel_Result> insertAsignRevModel(Nullable<int> id_model, Nullable<int> id_review)
        {
            var id_modelParameter = id_model.HasValue ?
                new ObjectParameter("id_model", id_model) :
                new ObjectParameter("id_model", typeof(int));
    
            var id_reviewParameter = id_review.HasValue ?
                new ObjectParameter("id_review", id_review) :
                new ObjectParameter("id_review", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<insertAsignRevModel_Result>("insertAsignRevModel", id_modelParameter, id_reviewParameter);
        }
    
        public virtual ObjectResult<insertEventLog_Result> insertEventLog(string strEvent, Nullable<int> idUser, string descr)
        {
            var strEventParameter = strEvent != null ?
                new ObjectParameter("strEvent", strEvent) :
                new ObjectParameter("strEvent", typeof(string));
    
            var idUserParameter = idUser.HasValue ?
                new ObjectParameter("idUser", idUser) :
                new ObjectParameter("idUser", typeof(int));
    
            var descrParameter = descr != null ?
                new ObjectParameter("descr", descr) :
                new ObjectParameter("descr", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<insertEventLog_Result>("insertEventLog", strEventParameter, idUserParameter, descrParameter);
        }
    
        public virtual int insertFailOr(string dj_number, Nullable<int> qty, Nullable<System.DateTime> date, string status, string line)
        {
            var dj_numberParameter = dj_number != null ?
                new ObjectParameter("dj_number", dj_number) :
                new ObjectParameter("dj_number", typeof(string));
    
            var qtyParameter = qty.HasValue ?
                new ObjectParameter("qty", qty) :
                new ObjectParameter("qty", typeof(int));
    
            var dateParameter = date.HasValue ?
                new ObjectParameter("date", date) :
                new ObjectParameter("date", typeof(System.DateTime));
    
            var statusParameter = status != null ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(string));
    
            var lineParameter = line != null ?
                new ObjectParameter("line", line) :
                new ObjectParameter("line", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("insertFailOr", dj_numberParameter, qtyParameter, dateParameter, statusParameter, lineParameter);
        }
    
        public virtual int insertHistPCB(string dj_number, Nullable<int> qty, Nullable<System.DateTime> date, string status, string line)
        {
            var dj_numberParameter = dj_number != null ?
                new ObjectParameter("dj_number", dj_number) :
                new ObjectParameter("dj_number", typeof(string));
    
            var qtyParameter = qty.HasValue ?
                new ObjectParameter("qty", qty) :
                new ObjectParameter("qty", typeof(int));
    
            var dateParameter = date.HasValue ?
                new ObjectParameter("date", date) :
                new ObjectParameter("date", typeof(System.DateTime));
    
            var statusParameter = status != null ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(string));
    
            var lineParameter = line != null ?
                new ObjectParameter("line", line) :
                new ObjectParameter("line", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("insertHistPCB", dj_numberParameter, qtyParameter, dateParameter, statusParameter, lineParameter);
        }
    
        public virtual int insertHistPCBOracle(string dj_number, Nullable<int> qty, Nullable<System.DateTime> date, string status, string line)
        {
            var dj_numberParameter = dj_number != null ?
                new ObjectParameter("dj_number", dj_number) :
                new ObjectParameter("dj_number", typeof(string));
    
            var qtyParameter = qty.HasValue ?
                new ObjectParameter("qty", qty) :
                new ObjectParameter("qty", typeof(int));
    
            var dateParameter = date.HasValue ?
                new ObjectParameter("date", date) :
                new ObjectParameter("date", typeof(System.DateTime));
    
            var statusParameter = status != null ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(string));
    
            var lineParameter = line != null ?
                new ObjectParameter("line", line) :
                new ObjectParameter("line", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("insertHistPCBOracle", dj_numberParameter, qtyParameter, dateParameter, statusParameter, lineParameter);
        }
    
        public virtual ObjectResult<insertPCBcount_Result> insertPCBcount(Nullable<int> idModel, string djNo, Nullable<int> idSpec, Nullable<int> pcbQty)
        {
            var idModelParameter = idModel.HasValue ?
                new ObjectParameter("idModel", idModel) :
                new ObjectParameter("idModel", typeof(int));
    
            var djNoParameter = djNo != null ?
                new ObjectParameter("djNo", djNo) :
                new ObjectParameter("djNo", typeof(string));
    
            var idSpecParameter = idSpec.HasValue ?
                new ObjectParameter("idSpec", idSpec) :
                new ObjectParameter("idSpec", typeof(int));
    
            var pcbQtyParameter = pcbQty.HasValue ?
                new ObjectParameter("pcbQty", pcbQty) :
                new ObjectParameter("pcbQty", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<insertPCBcount_Result>("insertPCBcount", idModelParameter, djNoParameter, idSpecParameter, pcbQtyParameter);
        }
    
        public virtual ObjectResult<insertSerial_Result> insertSerial(string serial, string djGroup, string serTop, string serBot, Nullable<int> idSide, Nullable<int> printFolio, Nullable<int> count)
        {
            var serialParameter = serial != null ?
                new ObjectParameter("serial", serial) :
                new ObjectParameter("serial", typeof(string));
    
            var djGroupParameter = djGroup != null ?
                new ObjectParameter("djGroup", djGroup) :
                new ObjectParameter("djGroup", typeof(string));
    
            var serTopParameter = serTop != null ?
                new ObjectParameter("serTop", serTop) :
                new ObjectParameter("serTop", typeof(string));
    
            var serBotParameter = serBot != null ?
                new ObjectParameter("serBot", serBot) :
                new ObjectParameter("serBot", typeof(string));
    
            var idSideParameter = idSide.HasValue ?
                new ObjectParameter("idSide", idSide) :
                new ObjectParameter("idSide", typeof(int));
    
            var printFolioParameter = printFolio.HasValue ?
                new ObjectParameter("printFolio", printFolio) :
                new ObjectParameter("printFolio", typeof(int));
    
            var countParameter = count.HasValue ?
                new ObjectParameter("count", count) :
                new ObjectParameter("count", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<insertSerial_Result>("insertSerial", serialParameter, djGroupParameter, serTopParameter, serBotParameter, idSideParameter, printFolioParameter, countParameter);
        }
    
        public virtual int insertSerials(string djNo)
        {
            var djNoParameter = djNo != null ?
                new ObjectParameter("DjNo", djNo) :
                new ObjectParameter("DjNo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("insertSerials", djNoParameter);
        }
    
        public virtual int insertSerialsLed2(string djNo)
        {
            var djNoParameter = djNo != null ?
                new ObjectParameter("DjNo", djNo) :
                new ObjectParameter("DjNo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("insertSerialsLed2", djNoParameter);
        }
    
        public virtual int insertSpec(Nullable<int> idModel, Nullable<int> idFlx, Nullable<int> idColor, Nullable<int> idVolt, Nullable<int> idUser, Nullable<int> cantTot, Nullable<int> iniFolio, Nullable<int> finFolio, Nullable<int> currFolio, string djNo, string aName)
        {
            var idModelParameter = idModel.HasValue ?
                new ObjectParameter("idModel", idModel) :
                new ObjectParameter("idModel", typeof(int));
    
            var idFlxParameter = idFlx.HasValue ?
                new ObjectParameter("idFlx", idFlx) :
                new ObjectParameter("idFlx", typeof(int));
    
            var idColorParameter = idColor.HasValue ?
                new ObjectParameter("idColor", idColor) :
                new ObjectParameter("idColor", typeof(int));
    
            var idVoltParameter = idVolt.HasValue ?
                new ObjectParameter("idVolt", idVolt) :
                new ObjectParameter("idVolt", typeof(int));
    
            var idUserParameter = idUser.HasValue ?
                new ObjectParameter("idUser", idUser) :
                new ObjectParameter("idUser", typeof(int));
    
            var cantTotParameter = cantTot.HasValue ?
                new ObjectParameter("cantTot", cantTot) :
                new ObjectParameter("cantTot", typeof(int));
    
            var iniFolioParameter = iniFolio.HasValue ?
                new ObjectParameter("iniFolio", iniFolio) :
                new ObjectParameter("iniFolio", typeof(int));
    
            var finFolioParameter = finFolio.HasValue ?
                new ObjectParameter("finFolio", finFolio) :
                new ObjectParameter("finFolio", typeof(int));
    
            var currFolioParameter = currFolio.HasValue ?
                new ObjectParameter("currFolio", currFolio) :
                new ObjectParameter("currFolio", typeof(int));
    
            var djNoParameter = djNo != null ?
                new ObjectParameter("djNo", djNo) :
                new ObjectParameter("djNo", typeof(string));
    
            var aNameParameter = aName != null ?
                new ObjectParameter("aName", aName) :
                new ObjectParameter("aName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("insertSpec", idModelParameter, idFlxParameter, idColorParameter, idVoltParameter, idUserParameter, cantTotParameter, iniFolioParameter, finFolioParameter, currFolioParameter, djNoParameter, aNameParameter);
        }
    
        public virtual ObjectResult<insertSpec_test_Result> insertSpec_test(Nullable<int> idModel, Nullable<int> idFlx, Nullable<int> idColor, Nullable<int> idVolt, Nullable<int> idUser, Nullable<int> cantTot, Nullable<int> iniFolio, Nullable<int> finFolio, Nullable<int> currFolio, string djNo, string aName)
        {
            var idModelParameter = idModel.HasValue ?
                new ObjectParameter("idModel", idModel) :
                new ObjectParameter("idModel", typeof(int));
    
            var idFlxParameter = idFlx.HasValue ?
                new ObjectParameter("idFlx", idFlx) :
                new ObjectParameter("idFlx", typeof(int));
    
            var idColorParameter = idColor.HasValue ?
                new ObjectParameter("idColor", idColor) :
                new ObjectParameter("idColor", typeof(int));
    
            var idVoltParameter = idVolt.HasValue ?
                new ObjectParameter("idVolt", idVolt) :
                new ObjectParameter("idVolt", typeof(int));
    
            var idUserParameter = idUser.HasValue ?
                new ObjectParameter("idUser", idUser) :
                new ObjectParameter("idUser", typeof(int));
    
            var cantTotParameter = cantTot.HasValue ?
                new ObjectParameter("cantTot", cantTot) :
                new ObjectParameter("cantTot", typeof(int));
    
            var iniFolioParameter = iniFolio.HasValue ?
                new ObjectParameter("iniFolio", iniFolio) :
                new ObjectParameter("iniFolio", typeof(int));
    
            var finFolioParameter = finFolio.HasValue ?
                new ObjectParameter("finFolio", finFolio) :
                new ObjectParameter("finFolio", typeof(int));
    
            var currFolioParameter = currFolio.HasValue ?
                new ObjectParameter("currFolio", currFolio) :
                new ObjectParameter("currFolio", typeof(int));
    
            var djNoParameter = djNo != null ?
                new ObjectParameter("djNo", djNo) :
                new ObjectParameter("djNo", typeof(string));
    
            var aNameParameter = aName != null ?
                new ObjectParameter("aName", aName) :
                new ObjectParameter("aName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<insertSpec_test_Result>("insertSpec_test", idModelParameter, idFlxParameter, idColorParameter, idVoltParameter, idUserParameter, cantTotParameter, iniFolioParameter, finFolioParameter, currFolioParameter, djNoParameter, aNameParameter);
        }
    
        public virtual int insertSpec2(Nullable<int> idModel, Nullable<int> idFlx, Nullable<int> idColor, Nullable<int> idVolt, Nullable<int> idUser, Nullable<int> cantTot, Nullable<int> iniFolio, Nullable<int> finFolio, Nullable<int> currFolio, string djNo, string aName, Nullable<System.DateTime> datePlan, Nullable<int> is_rem)
        {
            var idModelParameter = idModel.HasValue ?
                new ObjectParameter("idModel", idModel) :
                new ObjectParameter("idModel", typeof(int));
    
            var idFlxParameter = idFlx.HasValue ?
                new ObjectParameter("idFlx", idFlx) :
                new ObjectParameter("idFlx", typeof(int));
    
            var idColorParameter = idColor.HasValue ?
                new ObjectParameter("idColor", idColor) :
                new ObjectParameter("idColor", typeof(int));
    
            var idVoltParameter = idVolt.HasValue ?
                new ObjectParameter("idVolt", idVolt) :
                new ObjectParameter("idVolt", typeof(int));
    
            var idUserParameter = idUser.HasValue ?
                new ObjectParameter("idUser", idUser) :
                new ObjectParameter("idUser", typeof(int));
    
            var cantTotParameter = cantTot.HasValue ?
                new ObjectParameter("cantTot", cantTot) :
                new ObjectParameter("cantTot", typeof(int));
    
            var iniFolioParameter = iniFolio.HasValue ?
                new ObjectParameter("iniFolio", iniFolio) :
                new ObjectParameter("iniFolio", typeof(int));
    
            var finFolioParameter = finFolio.HasValue ?
                new ObjectParameter("finFolio", finFolio) :
                new ObjectParameter("finFolio", typeof(int));
    
            var currFolioParameter = currFolio.HasValue ?
                new ObjectParameter("currFolio", currFolio) :
                new ObjectParameter("currFolio", typeof(int));
    
            var djNoParameter = djNo != null ?
                new ObjectParameter("djNo", djNo) :
                new ObjectParameter("djNo", typeof(string));
    
            var aNameParameter = aName != null ?
                new ObjectParameter("aName", aName) :
                new ObjectParameter("aName", typeof(string));
    
            var datePlanParameter = datePlan.HasValue ?
                new ObjectParameter("datePlan", datePlan) :
                new ObjectParameter("datePlan", typeof(System.DateTime));
    
            var is_remParameter = is_rem.HasValue ?
                new ObjectParameter("is_rem", is_rem) :
                new ObjectParameter("is_rem", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("insertSpec2", idModelParameter, idFlxParameter, idColorParameter, idVoltParameter, idUserParameter, cantTotParameter, iniFolioParameter, finFolioParameter, currFolioParameter, djNoParameter, aNameParameter, datePlanParameter, is_remParameter);
        }
    
        public virtual ObjectResult<insertSpec3_Result> insertSpec3(Nullable<int> idModel, Nullable<int> idFlx, Nullable<int> idColor, Nullable<int> idVolt, Nullable<int> idUser, Nullable<int> cantTot, Nullable<int> iniFolio, Nullable<int> finFolio, Nullable<int> currFolio, string djNo, string aName, Nullable<System.DateTime> datePlan, Nullable<int> is_rem, string djGroup)
        {
            var idModelParameter = idModel.HasValue ?
                new ObjectParameter("idModel", idModel) :
                new ObjectParameter("idModel", typeof(int));
    
            var idFlxParameter = idFlx.HasValue ?
                new ObjectParameter("idFlx", idFlx) :
                new ObjectParameter("idFlx", typeof(int));
    
            var idColorParameter = idColor.HasValue ?
                new ObjectParameter("idColor", idColor) :
                new ObjectParameter("idColor", typeof(int));
    
            var idVoltParameter = idVolt.HasValue ?
                new ObjectParameter("idVolt", idVolt) :
                new ObjectParameter("idVolt", typeof(int));
    
            var idUserParameter = idUser.HasValue ?
                new ObjectParameter("idUser", idUser) :
                new ObjectParameter("idUser", typeof(int));
    
            var cantTotParameter = cantTot.HasValue ?
                new ObjectParameter("cantTot", cantTot) :
                new ObjectParameter("cantTot", typeof(int));
    
            var iniFolioParameter = iniFolio.HasValue ?
                new ObjectParameter("iniFolio", iniFolio) :
                new ObjectParameter("iniFolio", typeof(int));
    
            var finFolioParameter = finFolio.HasValue ?
                new ObjectParameter("finFolio", finFolio) :
                new ObjectParameter("finFolio", typeof(int));
    
            var currFolioParameter = currFolio.HasValue ?
                new ObjectParameter("currFolio", currFolio) :
                new ObjectParameter("currFolio", typeof(int));
    
            var djNoParameter = djNo != null ?
                new ObjectParameter("djNo", djNo) :
                new ObjectParameter("djNo", typeof(string));
    
            var aNameParameter = aName != null ?
                new ObjectParameter("aName", aName) :
                new ObjectParameter("aName", typeof(string));
    
            var datePlanParameter = datePlan.HasValue ?
                new ObjectParameter("datePlan", datePlan) :
                new ObjectParameter("datePlan", typeof(System.DateTime));
    
            var is_remParameter = is_rem.HasValue ?
                new ObjectParameter("is_rem", is_rem) :
                new ObjectParameter("is_rem", typeof(int));
    
            var djGroupParameter = djGroup != null ?
                new ObjectParameter("djGroup", djGroup) :
                new ObjectParameter("djGroup", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<insertSpec3_Result>("insertSpec3", idModelParameter, idFlxParameter, idColorParameter, idVoltParameter, idUserParameter, cantTotParameter, iniFolioParameter, finFolioParameter, currFolioParameter, djNoParameter, aNameParameter, datePlanParameter, is_remParameter, djGroupParameter);
        }
    
        public virtual int insertSpecLed2(Nullable<int> idModel, Nullable<int> idFlx, Nullable<int> idColor, Nullable<int> idVolt, Nullable<int> idUser, Nullable<int> cantTot, Nullable<int> iniFolio, Nullable<int> finFolio, Nullable<int> currFolio, string djNo, string aName, Nullable<System.DateTime> datePlan, Nullable<int> is_rem, Nullable<int> idFlx1, Nullable<int> idColor1, Nullable<int> idVolt1)
        {
            var idModelParameter = idModel.HasValue ?
                new ObjectParameter("idModel", idModel) :
                new ObjectParameter("idModel", typeof(int));
    
            var idFlxParameter = idFlx.HasValue ?
                new ObjectParameter("idFlx", idFlx) :
                new ObjectParameter("idFlx", typeof(int));
    
            var idColorParameter = idColor.HasValue ?
                new ObjectParameter("idColor", idColor) :
                new ObjectParameter("idColor", typeof(int));
    
            var idVoltParameter = idVolt.HasValue ?
                new ObjectParameter("idVolt", idVolt) :
                new ObjectParameter("idVolt", typeof(int));
    
            var idUserParameter = idUser.HasValue ?
                new ObjectParameter("idUser", idUser) :
                new ObjectParameter("idUser", typeof(int));
    
            var cantTotParameter = cantTot.HasValue ?
                new ObjectParameter("cantTot", cantTot) :
                new ObjectParameter("cantTot", typeof(int));
    
            var iniFolioParameter = iniFolio.HasValue ?
                new ObjectParameter("iniFolio", iniFolio) :
                new ObjectParameter("iniFolio", typeof(int));
    
            var finFolioParameter = finFolio.HasValue ?
                new ObjectParameter("finFolio", finFolio) :
                new ObjectParameter("finFolio", typeof(int));
    
            var currFolioParameter = currFolio.HasValue ?
                new ObjectParameter("currFolio", currFolio) :
                new ObjectParameter("currFolio", typeof(int));
    
            var djNoParameter = djNo != null ?
                new ObjectParameter("djNo", djNo) :
                new ObjectParameter("djNo", typeof(string));
    
            var aNameParameter = aName != null ?
                new ObjectParameter("aName", aName) :
                new ObjectParameter("aName", typeof(string));
    
            var datePlanParameter = datePlan.HasValue ?
                new ObjectParameter("datePlan", datePlan) :
                new ObjectParameter("datePlan", typeof(System.DateTime));
    
            var is_remParameter = is_rem.HasValue ?
                new ObjectParameter("is_rem", is_rem) :
                new ObjectParameter("is_rem", typeof(int));
    
            var idFlx1Parameter = idFlx1.HasValue ?
                new ObjectParameter("idFlx1", idFlx1) :
                new ObjectParameter("idFlx1", typeof(int));
    
            var idColor1Parameter = idColor1.HasValue ?
                new ObjectParameter("idColor1", idColor1) :
                new ObjectParameter("idColor1", typeof(int));
    
            var idVolt1Parameter = idVolt1.HasValue ?
                new ObjectParameter("idVolt1", idVolt1) :
                new ObjectParameter("idVolt1", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("insertSpecLed2", idModelParameter, idFlxParameter, idColorParameter, idVoltParameter, idUserParameter, cantTotParameter, iniFolioParameter, finFolioParameter, currFolioParameter, djNoParameter, aNameParameter, datePlanParameter, is_remParameter, idFlx1Parameter, idColor1Parameter, idVolt1Parameter);
        }
    
        public virtual ObjectResult<insertSpecLed2_2_Result> insertSpecLed2_2(Nullable<int> idModel, Nullable<int> idFlx, Nullable<int> idColor, Nullable<int> idVolt, Nullable<int> idUser, Nullable<int> cantTot, Nullable<int> iniFolio, Nullable<int> finFolio, Nullable<int> currFolio, string djNo, string aName, Nullable<System.DateTime> datePlan, Nullable<int> is_rem, Nullable<int> idFlx1, Nullable<int> idColor1, Nullable<int> idVolt1, string djGroup)
        {
            var idModelParameter = idModel.HasValue ?
                new ObjectParameter("idModel", idModel) :
                new ObjectParameter("idModel", typeof(int));
    
            var idFlxParameter = idFlx.HasValue ?
                new ObjectParameter("idFlx", idFlx) :
                new ObjectParameter("idFlx", typeof(int));
    
            var idColorParameter = idColor.HasValue ?
                new ObjectParameter("idColor", idColor) :
                new ObjectParameter("idColor", typeof(int));
    
            var idVoltParameter = idVolt.HasValue ?
                new ObjectParameter("idVolt", idVolt) :
                new ObjectParameter("idVolt", typeof(int));
    
            var idUserParameter = idUser.HasValue ?
                new ObjectParameter("idUser", idUser) :
                new ObjectParameter("idUser", typeof(int));
    
            var cantTotParameter = cantTot.HasValue ?
                new ObjectParameter("cantTot", cantTot) :
                new ObjectParameter("cantTot", typeof(int));
    
            var iniFolioParameter = iniFolio.HasValue ?
                new ObjectParameter("iniFolio", iniFolio) :
                new ObjectParameter("iniFolio", typeof(int));
    
            var finFolioParameter = finFolio.HasValue ?
                new ObjectParameter("finFolio", finFolio) :
                new ObjectParameter("finFolio", typeof(int));
    
            var currFolioParameter = currFolio.HasValue ?
                new ObjectParameter("currFolio", currFolio) :
                new ObjectParameter("currFolio", typeof(int));
    
            var djNoParameter = djNo != null ?
                new ObjectParameter("djNo", djNo) :
                new ObjectParameter("djNo", typeof(string));
    
            var aNameParameter = aName != null ?
                new ObjectParameter("aName", aName) :
                new ObjectParameter("aName", typeof(string));
    
            var datePlanParameter = datePlan.HasValue ?
                new ObjectParameter("datePlan", datePlan) :
                new ObjectParameter("datePlan", typeof(System.DateTime));
    
            var is_remParameter = is_rem.HasValue ?
                new ObjectParameter("is_rem", is_rem) :
                new ObjectParameter("is_rem", typeof(int));
    
            var idFlx1Parameter = idFlx1.HasValue ?
                new ObjectParameter("idFlx1", idFlx1) :
                new ObjectParameter("idFlx1", typeof(int));
    
            var idColor1Parameter = idColor1.HasValue ?
                new ObjectParameter("idColor1", idColor1) :
                new ObjectParameter("idColor1", typeof(int));
    
            var idVolt1Parameter = idVolt1.HasValue ?
                new ObjectParameter("idVolt1", idVolt1) :
                new ObjectParameter("idVolt1", typeof(int));
    
            var djGroupParameter = djGroup != null ?
                new ObjectParameter("djGroup", djGroup) :
                new ObjectParameter("djGroup", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<insertSpecLed2_2_Result>("insertSpecLed2_2", idModelParameter, idFlxParameter, idColorParameter, idVoltParameter, idUserParameter, cantTotParameter, iniFolioParameter, finFolioParameter, currFolioParameter, djNoParameter, aNameParameter, datePlanParameter, is_remParameter, idFlx1Parameter, idColor1Parameter, idVolt1Parameter, djGroupParameter);
        }
    
        public virtual ObjectResult<isPrintedDJ_Result> isPrintedDJ(string dj_no)
        {
            var dj_noParameter = dj_no != null ?
                new ObjectParameter("dj_no", dj_no) :
                new ObjectParameter("dj_no", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<isPrintedDJ_Result>("isPrintedDJ", dj_noParameter);
        }
    
        public virtual int retryInsertOr()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("retryInsertOr");
        }
    
        public virtual ObjectResult<isPrintedDJV2_Result> isPrintedDJV2(string dj_no, Nullable<int> idModel)
        {
            var dj_noParameter = dj_no != null ?
                new ObjectParameter("dj_no", dj_no) :
                new ObjectParameter("dj_no", typeof(string));
    
            var idModelParameter = idModel.HasValue ?
                new ObjectParameter("idModel", idModel) :
                new ObjectParameter("idModel", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<isPrintedDJV2_Result>("isPrintedDJV2", dj_noParameter, idModelParameter);
        }
    
        public virtual ObjectResult<checkPartSM_Result> checkPartSM(Nullable<int> idmodel, string djGroup, Nullable<int> qtyPCB, Nullable<int> idFlx, Nullable<int> idColor, Nullable<int> idVolt, Nullable<int> idFlx1, Nullable<int> idColor1, Nullable<int> idVolt1)
        {
            var idmodelParameter = idmodel.HasValue ?
                new ObjectParameter("idmodel", idmodel) :
                new ObjectParameter("idmodel", typeof(int));
    
            var djGroupParameter = djGroup != null ?
                new ObjectParameter("djGroup", djGroup) :
                new ObjectParameter("djGroup", typeof(string));
    
            var qtyPCBParameter = qtyPCB.HasValue ?
                new ObjectParameter("qtyPCB", qtyPCB) :
                new ObjectParameter("qtyPCB", typeof(int));
    
            var idFlxParameter = idFlx.HasValue ?
                new ObjectParameter("idFlx", idFlx) :
                new ObjectParameter("idFlx", typeof(int));
    
            var idColorParameter = idColor.HasValue ?
                new ObjectParameter("idColor", idColor) :
                new ObjectParameter("idColor", typeof(int));
    
            var idVoltParameter = idVolt.HasValue ?
                new ObjectParameter("idVolt", idVolt) :
                new ObjectParameter("idVolt", typeof(int));
    
            var idFlx1Parameter = idFlx1.HasValue ?
                new ObjectParameter("idFlx1", idFlx1) :
                new ObjectParameter("idFlx1", typeof(int));
    
            var idColor1Parameter = idColor1.HasValue ?
                new ObjectParameter("idColor1", idColor1) :
                new ObjectParameter("idColor1", typeof(int));
    
            var idVolt1Parameter = idVolt1.HasValue ?
                new ObjectParameter("idVolt1", idVolt1) :
                new ObjectParameter("idVolt1", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<checkPartSM_Result>("checkPartSM", idmodelParameter, djGroupParameter, qtyPCBParameter, idFlxParameter, idColorParameter, idVoltParameter, idFlx1Parameter, idColor1Parameter, idVolt1Parameter);
        }
    
        public virtual ObjectResult<insertPCBcountSM_Result> insertPCBcountSM(Nullable<int> idModel, string djNo, Nullable<int> idSpec, Nullable<int> pcbQty)
        {
            var idModelParameter = idModel.HasValue ?
                new ObjectParameter("idModel", idModel) :
                new ObjectParameter("idModel", typeof(int));
    
            var djNoParameter = djNo != null ?
                new ObjectParameter("djNo", djNo) :
                new ObjectParameter("djNo", typeof(string));
    
            var idSpecParameter = idSpec.HasValue ?
                new ObjectParameter("idSpec", idSpec) :
                new ObjectParameter("idSpec", typeof(int));
    
            var pcbQtyParameter = pcbQty.HasValue ?
                new ObjectParameter("pcbQty", pcbQty) :
                new ObjectParameter("pcbQty", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<insertPCBcountSM_Result>("insertPCBcountSM", idModelParameter, djNoParameter, idSpecParameter, pcbQtyParameter);
        }
    
        public virtual ObjectResult<generateSerialsByDJ_Result> generateSerialsByDJ(string djGroup, Nullable<int> cantLabels, Nullable<int> idFlx, Nullable<int> idColor, Nullable<int> idVolt, Nullable<int> idRev, string date)
        {
            var djGroupParameter = djGroup != null ?
                new ObjectParameter("djGroup", djGroup) :
                new ObjectParameter("djGroup", typeof(string));
    
            var cantLabelsParameter = cantLabels.HasValue ?
                new ObjectParameter("cantLabels", cantLabels) :
                new ObjectParameter("cantLabels", typeof(int));
    
            var idFlxParameter = idFlx.HasValue ?
                new ObjectParameter("idFlx", idFlx) :
                new ObjectParameter("idFlx", typeof(int));
    
            var idColorParameter = idColor.HasValue ?
                new ObjectParameter("idColor", idColor) :
                new ObjectParameter("idColor", typeof(int));
    
            var idVoltParameter = idVolt.HasValue ?
                new ObjectParameter("idVolt", idVolt) :
                new ObjectParameter("idVolt", typeof(int));
    
            var idRevParameter = idRev.HasValue ?
                new ObjectParameter("idRev", idRev) :
                new ObjectParameter("idRev", typeof(int));
    
            var dateParameter = date != null ?
                new ObjectParameter("date", date) :
                new ObjectParameter("date", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<generateSerialsByDJ_Result>("generateSerialsByDJ", djGroupParameter, cantLabelsParameter, idFlxParameter, idColorParameter, idVoltParameter, idRevParameter, dateParameter);
        }
    
        public virtual ObjectResult<getGeneratedSerialsByDJ_Result> getGeneratedSerialsByDJ(string djGroup, Nullable<int> printedFolio)
        {
            var djGroupParameter = djGroup != null ?
                new ObjectParameter("djGroup", djGroup) :
                new ObjectParameter("djGroup", typeof(string));
    
            var printedFolioParameter = printedFolio.HasValue ?
                new ObjectParameter("printedFolio", printedFolio) :
                new ObjectParameter("printedFolio", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getGeneratedSerialsByDJ_Result>("getGeneratedSerialsByDJ", djGroupParameter, printedFolioParameter);
        }
    
        public virtual int getQtyDjGrp(Nullable<int> djGrp, Nullable<int> djNo, Nullable<int> idModel)
        {
            var djGrpParameter = djGrp.HasValue ?
                new ObjectParameter("DjGrp", djGrp) :
                new ObjectParameter("DjGrp", typeof(int));
    
            var djNoParameter = djNo.HasValue ?
                new ObjectParameter("DjNo", djNo) :
                new ObjectParameter("DjNo", typeof(int));
    
            var idModelParameter = idModel.HasValue ?
                new ObjectParameter("IdModel", idModel) :
                new ObjectParameter("IdModel", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("getQtyDjGrp", djGrpParameter, djNoParameter, idModelParameter);
        }
    
        public virtual ObjectResult<existSerial_Result> existSerial(string serial)
        {
            var serialParameter = serial != null ?
                new ObjectParameter("serial", serial) :
                new ObjectParameter("serial", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<existSerial_Result>("existSerial", serialParameter);
        }
    
        public virtual ObjectResult<getPrintFolioDJ_Result> getPrintFolioDJ(string djGroup)
        {
            var djGroupParameter = djGroup != null ?
                new ObjectParameter("djGroup", djGroup) :
                new ObjectParameter("djGroup", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getPrintFolioDJ_Result>("getPrintFolioDJ", djGroupParameter);
        }
    
        public virtual ObjectResult<existSerial_Led2_Result> existSerial_Led2(string serial)
        {
            var serialParameter = serial != null ?
                new ObjectParameter("serial", serial) :
                new ObjectParameter("serial", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<existSerial_Led2_Result>("existSerial_Led2", serialParameter);
        }
    
        public virtual ObjectResult<getPrintFolioDJ_Led2_Result> getPrintFolioDJ_Led2(string djGroup)
        {
            var djGroupParameter = djGroup != null ?
                new ObjectParameter("djGroup", djGroup) :
                new ObjectParameter("djGroup", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getPrintFolioDJ_Led2_Result>("getPrintFolioDJ_Led2", djGroupParameter);
        }
    
        public virtual ObjectResult<insertSpecLed2_2V2_Result> insertSpecLed2_2V2(Nullable<int> idModel, Nullable<int> idFlx, Nullable<int> idColor, Nullable<int> idVolt, Nullable<int> idUser, string djNo, string aName, Nullable<System.DateTime> datePlan, Nullable<int> is_rem, Nullable<int> idFlx1, Nullable<int> idColor1, Nullable<int> idVolt1, string djGroup, Nullable<int> printFolio)
        {
            var idModelParameter = idModel.HasValue ?
                new ObjectParameter("idModel", idModel) :
                new ObjectParameter("idModel", typeof(int));
    
            var idFlxParameter = idFlx.HasValue ?
                new ObjectParameter("idFlx", idFlx) :
                new ObjectParameter("idFlx", typeof(int));
    
            var idColorParameter = idColor.HasValue ?
                new ObjectParameter("idColor", idColor) :
                new ObjectParameter("idColor", typeof(int));
    
            var idVoltParameter = idVolt.HasValue ?
                new ObjectParameter("idVolt", idVolt) :
                new ObjectParameter("idVolt", typeof(int));
    
            var idUserParameter = idUser.HasValue ?
                new ObjectParameter("idUser", idUser) :
                new ObjectParameter("idUser", typeof(int));
    
            var djNoParameter = djNo != null ?
                new ObjectParameter("djNo", djNo) :
                new ObjectParameter("djNo", typeof(string));
    
            var aNameParameter = aName != null ?
                new ObjectParameter("aName", aName) :
                new ObjectParameter("aName", typeof(string));
    
            var datePlanParameter = datePlan.HasValue ?
                new ObjectParameter("datePlan", datePlan) :
                new ObjectParameter("datePlan", typeof(System.DateTime));
    
            var is_remParameter = is_rem.HasValue ?
                new ObjectParameter("is_rem", is_rem) :
                new ObjectParameter("is_rem", typeof(int));
    
            var idFlx1Parameter = idFlx1.HasValue ?
                new ObjectParameter("idFlx1", idFlx1) :
                new ObjectParameter("idFlx1", typeof(int));
    
            var idColor1Parameter = idColor1.HasValue ?
                new ObjectParameter("idColor1", idColor1) :
                new ObjectParameter("idColor1", typeof(int));
    
            var idVolt1Parameter = idVolt1.HasValue ?
                new ObjectParameter("idVolt1", idVolt1) :
                new ObjectParameter("idVolt1", typeof(int));
    
            var djGroupParameter = djGroup != null ?
                new ObjectParameter("djGroup", djGroup) :
                new ObjectParameter("djGroup", typeof(string));
    
            var printFolioParameter = printFolio.HasValue ?
                new ObjectParameter("printFolio", printFolio) :
                new ObjectParameter("printFolio", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<insertSpecLed2_2V2_Result>("insertSpecLed2_2V2", idModelParameter, idFlxParameter, idColorParameter, idVoltParameter, idUserParameter, djNoParameter, aNameParameter, datePlanParameter, is_remParameter, idFlx1Parameter, idColor1Parameter, idVolt1Parameter, djGroupParameter, printFolioParameter);
        }
    
        public virtual ObjectResult<insertSerialV2_Result> insertSerialV2(string serial, string djGroup, string serTop, string serBot, Nullable<int> idSide, Nullable<int> printFolio, Nullable<int> count, Nullable<int> idModel)
        {
            var serialParameter = serial != null ?
                new ObjectParameter("serial", serial) :
                new ObjectParameter("serial", typeof(string));
    
            var djGroupParameter = djGroup != null ?
                new ObjectParameter("djGroup", djGroup) :
                new ObjectParameter("djGroup", typeof(string));
    
            var serTopParameter = serTop != null ?
                new ObjectParameter("serTop", serTop) :
                new ObjectParameter("serTop", typeof(string));
    
            var serBotParameter = serBot != null ?
                new ObjectParameter("serBot", serBot) :
                new ObjectParameter("serBot", typeof(string));
    
            var idSideParameter = idSide.HasValue ?
                new ObjectParameter("idSide", idSide) :
                new ObjectParameter("idSide", typeof(int));
    
            var printFolioParameter = printFolio.HasValue ?
                new ObjectParameter("printFolio", printFolio) :
                new ObjectParameter("printFolio", typeof(int));
    
            var countParameter = count.HasValue ?
                new ObjectParameter("count", count) :
                new ObjectParameter("count", typeof(int));
    
            var idModelParameter = idModel.HasValue ?
                new ObjectParameter("idModel", idModel) :
                new ObjectParameter("idModel", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<insertSerialV2_Result>("insertSerialV2", serialParameter, djGroupParameter, serTopParameter, serBotParameter, idSideParameter, printFolioParameter, countParameter, idModelParameter);
        }
    
        public virtual ObjectResult<getLastSerialByDateV2_Result> getLastSerialByDateV2(Nullable<int> idModel, string date, Nullable<int> side)
        {
            var idModelParameter = idModel.HasValue ?
                new ObjectParameter("idModel", idModel) :
                new ObjectParameter("idModel", typeof(int));
    
            var dateParameter = date != null ?
                new ObjectParameter("date", date) :
                new ObjectParameter("date", typeof(string));
    
            var sideParameter = side.HasValue ?
                new ObjectParameter("side", side) :
                new ObjectParameter("side", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getLastSerialByDateV2_Result>("getLastSerialByDateV2", idModelParameter, dateParameter, sideParameter);
        }
    
        public virtual ObjectResult<insertSpec3V2_Result> insertSpec3V2(Nullable<int> idModel, Nullable<int> idFlx, Nullable<int> idColor, Nullable<int> idVolt, Nullable<int> idUser, Nullable<int> cantTot, Nullable<int> iniFolio, Nullable<int> finFolio, Nullable<int> currFolio, string djNo, string aName, Nullable<System.DateTime> datePlan, Nullable<int> is_rem, string djGroup, Nullable<int> side)
        {
            var idModelParameter = idModel.HasValue ?
                new ObjectParameter("idModel", idModel) :
                new ObjectParameter("idModel", typeof(int));
    
            var idFlxParameter = idFlx.HasValue ?
                new ObjectParameter("idFlx", idFlx) :
                new ObjectParameter("idFlx", typeof(int));
    
            var idColorParameter = idColor.HasValue ?
                new ObjectParameter("idColor", idColor) :
                new ObjectParameter("idColor", typeof(int));
    
            var idVoltParameter = idVolt.HasValue ?
                new ObjectParameter("idVolt", idVolt) :
                new ObjectParameter("idVolt", typeof(int));
    
            var idUserParameter = idUser.HasValue ?
                new ObjectParameter("idUser", idUser) :
                new ObjectParameter("idUser", typeof(int));
    
            var cantTotParameter = cantTot.HasValue ?
                new ObjectParameter("cantTot", cantTot) :
                new ObjectParameter("cantTot", typeof(int));
    
            var iniFolioParameter = iniFolio.HasValue ?
                new ObjectParameter("iniFolio", iniFolio) :
                new ObjectParameter("iniFolio", typeof(int));
    
            var finFolioParameter = finFolio.HasValue ?
                new ObjectParameter("finFolio", finFolio) :
                new ObjectParameter("finFolio", typeof(int));
    
            var currFolioParameter = currFolio.HasValue ?
                new ObjectParameter("currFolio", currFolio) :
                new ObjectParameter("currFolio", typeof(int));
    
            var djNoParameter = djNo != null ?
                new ObjectParameter("djNo", djNo) :
                new ObjectParameter("djNo", typeof(string));
    
            var aNameParameter = aName != null ?
                new ObjectParameter("aName", aName) :
                new ObjectParameter("aName", typeof(string));
    
            var datePlanParameter = datePlan.HasValue ?
                new ObjectParameter("datePlan", datePlan) :
                new ObjectParameter("datePlan", typeof(System.DateTime));
    
            var is_remParameter = is_rem.HasValue ?
                new ObjectParameter("is_rem", is_rem) :
                new ObjectParameter("is_rem", typeof(int));
    
            var djGroupParameter = djGroup != null ?
                new ObjectParameter("djGroup", djGroup) :
                new ObjectParameter("djGroup", typeof(string));
    
            var sideParameter = side.HasValue ?
                new ObjectParameter("Side", side) :
                new ObjectParameter("Side", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<insertSpec3V2_Result>("insertSpec3V2", idModelParameter, idFlxParameter, idColorParameter, idVoltParameter, idUserParameter, cantTotParameter, iniFolioParameter, finFolioParameter, currFolioParameter, djNoParameter, aNameParameter, datePlanParameter, is_remParameter, djGroupParameter, sideParameter);
        }
    
        public virtual ObjectResult<checkDateDJV2_Result> checkDateDJV2(Nullable<int> idModel, string dateDJ, Nullable<int> idSide)
        {
            var idModelParameter = idModel.HasValue ?
                new ObjectParameter("idModel", idModel) :
                new ObjectParameter("idModel", typeof(int));
    
            var dateDJParameter = dateDJ != null ?
                new ObjectParameter("dateDJ", dateDJ) :
                new ObjectParameter("dateDJ", typeof(string));
    
            var idSideParameter = idSide.HasValue ?
                new ObjectParameter("idSide", idSide) :
                new ObjectParameter("idSide", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<checkDateDJV2_Result>("checkDateDJV2", idModelParameter, dateDJParameter, idSideParameter);
        }
    
        public virtual ObjectResult<getLastSerialV2_Result> getLastSerialV2(Nullable<int> idModel, Nullable<int> side, string djGRp)
        {
            var idModelParameter = idModel.HasValue ?
                new ObjectParameter("idModel", idModel) :
                new ObjectParameter("idModel", typeof(int));
    
            var sideParameter = side.HasValue ?
                new ObjectParameter("side", side) :
                new ObjectParameter("side", typeof(int));
    
            var djGRpParameter = djGRp != null ?
                new ObjectParameter("djGRp", djGRp) :
                new ObjectParameter("djGRp", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getLastSerialV2_Result>("getLastSerialV2", idModelParameter, sideParameter, djGRpParameter);
        }
    
        public virtual ObjectResult<getMaxSerialByDj_Result> getMaxSerialByDj(string djGroup, Nullable<int> idModel)
        {
            var djGroupParameter = djGroup != null ?
                new ObjectParameter("djGroup", djGroup) :
                new ObjectParameter("djGroup", typeof(string));
    
            var idModelParameter = idModel.HasValue ?
                new ObjectParameter("idModel", idModel) :
                new ObjectParameter("idModel", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getMaxSerialByDj_Result>("getMaxSerialByDj", djGroupParameter, idModelParameter);
        }
    
        public virtual ObjectResult<getMaxSerialLed2ByDj_Result> getMaxSerialLed2ByDj(string djGroup, Nullable<int> idModel, Nullable<int> side)
        {
            var djGroupParameter = djGroup != null ?
                new ObjectParameter("djGroup", djGroup) :
                new ObjectParameter("djGroup", typeof(string));
    
            var idModelParameter = idModel.HasValue ?
                new ObjectParameter("idModel", idModel) :
                new ObjectParameter("idModel", typeof(int));
    
            var sideParameter = side.HasValue ?
                new ObjectParameter("side", side) :
                new ObjectParameter("side", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getMaxSerialLed2ByDj_Result>("getMaxSerialLed2ByDj", djGroupParameter, idModelParameter, sideParameter);
        }
    
        public virtual ObjectResult<getMaxSerialByDjV2_Result> getMaxSerialByDjV2(string djGroup, Nullable<int> idModel, Nullable<int> side)
        {
            var djGroupParameter = djGroup != null ?
                new ObjectParameter("djGroup", djGroup) :
                new ObjectParameter("djGroup", typeof(string));
    
            var idModelParameter = idModel.HasValue ?
                new ObjectParameter("idModel", idModel) :
                new ObjectParameter("idModel", typeof(int));
    
            var sideParameter = side.HasValue ?
                new ObjectParameter("side", side) :
                new ObjectParameter("side", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getMaxSerialByDjV2_Result>("getMaxSerialByDjV2", djGroupParameter, idModelParameter, sideParameter);
        }
    
        public virtual ObjectResult<getXMLByModel_Result> getXMLByModel(Nullable<int> idModel)
        {
            var idModelParameter = idModel.HasValue ?
                new ObjectParameter("idModel", idModel) :
                new ObjectParameter("idModel", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getXMLByModel_Result>("getXMLByModel", idModelParameter);
        }
    
        public virtual ObjectResult<getLastSerialByDateLed2_Result> getLastSerialByDateLed2(Nullable<int> idModel, string date)
        {
            var idModelParameter = idModel.HasValue ?
                new ObjectParameter("idModel", idModel) :
                new ObjectParameter("idModel", typeof(int));
    
            var dateParameter = date != null ?
                new ObjectParameter("date", date) :
                new ObjectParameter("date", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getLastSerialByDateLed2_Result>("getLastSerialByDateLed2", idModelParameter, dateParameter);
        }
    
        public virtual ObjectResult<generateSerialsByDJV2_Result> generateSerialsByDJV2(string djGroup, Nullable<int> cantLabels, Nullable<int> idFlx, Nullable<int> idColor, Nullable<int> idVolt, Nullable<int> idRev, string date, Nullable<int> initFolio, Nullable<int> idSide)
        {
            var djGroupParameter = djGroup != null ?
                new ObjectParameter("djGroup", djGroup) :
                new ObjectParameter("djGroup", typeof(string));
    
            var cantLabelsParameter = cantLabels.HasValue ?
                new ObjectParameter("cantLabels", cantLabels) :
                new ObjectParameter("cantLabels", typeof(int));
    
            var idFlxParameter = idFlx.HasValue ?
                new ObjectParameter("idFlx", idFlx) :
                new ObjectParameter("idFlx", typeof(int));
    
            var idColorParameter = idColor.HasValue ?
                new ObjectParameter("idColor", idColor) :
                new ObjectParameter("idColor", typeof(int));
    
            var idVoltParameter = idVolt.HasValue ?
                new ObjectParameter("idVolt", idVolt) :
                new ObjectParameter("idVolt", typeof(int));
    
            var idRevParameter = idRev.HasValue ?
                new ObjectParameter("idRev", idRev) :
                new ObjectParameter("idRev", typeof(int));
    
            var dateParameter = date != null ?
                new ObjectParameter("date", date) :
                new ObjectParameter("date", typeof(string));
    
            var initFolioParameter = initFolio.HasValue ?
                new ObjectParameter("initFolio", initFolio) :
                new ObjectParameter("initFolio", typeof(int));
    
            var idSideParameter = idSide.HasValue ?
                new ObjectParameter("idSide", idSide) :
                new ObjectParameter("idSide", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<generateSerialsByDJV2_Result>("generateSerialsByDJV2", djGroupParameter, cantLabelsParameter, idFlxParameter, idColorParameter, idVoltParameter, idRevParameter, dateParameter, initFolioParameter, idSideParameter);
        }
    
        public virtual ObjectResult<getTemplateLblPrint_Result> getTemplateLblPrint(string fULLTEMPLATE, string lINEBTTEMPLATE)
        {
            var fULLTEMPLATEParameter = fULLTEMPLATE != null ?
                new ObjectParameter("FULLTEMPLATE", fULLTEMPLATE) :
                new ObjectParameter("FULLTEMPLATE", typeof(string));
    
            var lINEBTTEMPLATEParameter = lINEBTTEMPLATE != null ?
                new ObjectParameter("LINEBTTEMPLATE", lINEBTTEMPLATE) :
                new ObjectParameter("LINEBTTEMPLATE", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getTemplateLblPrint_Result>("getTemplateLblPrint", fULLTEMPLATEParameter, lINEBTTEMPLATEParameter);
        }
    
        public virtual ObjectResult<getGeneratedSerialsByDJV2_Result> getGeneratedSerialsByDJV2(string djGroup, Nullable<int> printedFolio, Nullable<int> idSide, Nullable<int> idModel)
        {
            var djGroupParameter = djGroup != null ?
                new ObjectParameter("djGroup", djGroup) :
                new ObjectParameter("djGroup", typeof(string));
    
            var printedFolioParameter = printedFolio.HasValue ?
                new ObjectParameter("printedFolio", printedFolio) :
                new ObjectParameter("printedFolio", typeof(int));
    
            var idSideParameter = idSide.HasValue ?
                new ObjectParameter("idSide", idSide) :
                new ObjectParameter("idSide", typeof(int));
    
            var idModelParameter = idModel.HasValue ?
                new ObjectParameter("idModel", idModel) :
                new ObjectParameter("idModel", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getGeneratedSerialsByDJV2_Result>("getGeneratedSerialsByDJV2", djGroupParameter, printedFolioParameter, idSideParameter, idModelParameter);
        }
    
        public virtual ObjectResult<getZPLModels_Result> getZPLModels()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getZPLModels_Result>("getZPLModels");
        }
    
        public virtual int updateZPLOS(Nullable<int> idZPL, string zPL)
        {
            var idZPLParameter = idZPL.HasValue ?
                new ObjectParameter("idZPL", idZPL) :
                new ObjectParameter("idZPL", typeof(int));
    
            var zPLParameter = zPL != null ?
                new ObjectParameter("ZPL", zPL) :
                new ObjectParameter("ZPL", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("updateZPLOS", idZPLParameter, zPLParameter);
        }
    
        public virtual int updateZPLTS(Nullable<int> idZPL, string zPL)
        {
            var idZPLParameter = idZPL.HasValue ?
                new ObjectParameter("idZPL", idZPL) :
                new ObjectParameter("idZPL", typeof(int));
    
            var zPLParameter = zPL != null ?
                new ObjectParameter("ZPL", zPL) :
                new ObjectParameter("ZPL", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("updateZPLTS", idZPLParameter, zPLParameter);
        }
    
        public virtual ObjectResult<getLabelsToPrintV3_Result> getLabelsToPrintV3(string fechaIni, string fechaFin)
        {
            var fechaIniParameter = fechaIni != null ?
                new ObjectParameter("fechaIni", fechaIni) :
                new ObjectParameter("fechaIni", typeof(string));
    
            var fechaFinParameter = fechaFin != null ?
                new ObjectParameter("fechaFin", fechaFin) :
                new ObjectParameter("fechaFin", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getLabelsToPrintV3_Result>("getLabelsToPrintV3", fechaIniParameter, fechaFinParameter);
        }
    
        public virtual ObjectResult<getMaxSerialByDjV3_Result> getMaxSerialByDjV3(string djGroup, Nullable<int> idModel, Nullable<int> side)
        {
            var djGroupParameter = djGroup != null ?
                new ObjectParameter("djGroup", djGroup) :
                new ObjectParameter("djGroup", typeof(string));
    
            var idModelParameter = idModel.HasValue ?
                new ObjectParameter("idModel", idModel) :
                new ObjectParameter("idModel", typeof(int));
    
            var sideParameter = side.HasValue ?
                new ObjectParameter("side", side) :
                new ObjectParameter("side", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getMaxSerialByDjV3_Result>("getMaxSerialByDjV3", djGroupParameter, idModelParameter, sideParameter);
        }
    
        public virtual ObjectResult<generateSerialsByDJV3_Result> generateSerialsByDJV3(string djGroup, Nullable<int> cantLabels, Nullable<int> idFlx, Nullable<int> idColor, Nullable<int> idVolt, Nullable<int> idRev, string date, Nullable<int> initFolio, Nullable<int> idSide, Nullable<int> idModel)
        {
            var djGroupParameter = djGroup != null ?
                new ObjectParameter("djGroup", djGroup) :
                new ObjectParameter("djGroup", typeof(string));
    
            var cantLabelsParameter = cantLabels.HasValue ?
                new ObjectParameter("cantLabels", cantLabels) :
                new ObjectParameter("cantLabels", typeof(int));
    
            var idFlxParameter = idFlx.HasValue ?
                new ObjectParameter("idFlx", idFlx) :
                new ObjectParameter("idFlx", typeof(int));
    
            var idColorParameter = idColor.HasValue ?
                new ObjectParameter("idColor", idColor) :
                new ObjectParameter("idColor", typeof(int));
    
            var idVoltParameter = idVolt.HasValue ?
                new ObjectParameter("idVolt", idVolt) :
                new ObjectParameter("idVolt", typeof(int));
    
            var idRevParameter = idRev.HasValue ?
                new ObjectParameter("idRev", idRev) :
                new ObjectParameter("idRev", typeof(int));
    
            var dateParameter = date != null ?
                new ObjectParameter("date", date) :
                new ObjectParameter("date", typeof(string));
    
            var initFolioParameter = initFolio.HasValue ?
                new ObjectParameter("initFolio", initFolio) :
                new ObjectParameter("initFolio", typeof(int));
    
            var idSideParameter = idSide.HasValue ?
                new ObjectParameter("idSide", idSide) :
                new ObjectParameter("idSide", typeof(int));
    
            var idModelParameter = idModel.HasValue ?
                new ObjectParameter("idModel", idModel) :
                new ObjectParameter("idModel", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<generateSerialsByDJV3_Result>("generateSerialsByDJV3", djGroupParameter, cantLabelsParameter, idFlxParameter, idColorParameter, idVoltParameter, idRevParameter, dateParameter, initFolioParameter, idSideParameter, idModelParameter);
        }
    
        public virtual ObjectResult<generateSerialsByDJ_LED_2V3_Result> generateSerialsByDJ_LED_2V3(string djGroup, Nullable<int> cantLabels, Nullable<int> idFlx, Nullable<int> idColor, Nullable<int> idVolt, Nullable<int> idRev, string date, Nullable<int> initFolio, Nullable<int> idSide, Nullable<int> idFlx1, Nullable<int> idVolt1, Nullable<int> idColor1, Nullable<int> idModel)
        {
            var djGroupParameter = djGroup != null ?
                new ObjectParameter("djGroup", djGroup) :
                new ObjectParameter("djGroup", typeof(string));
    
            var cantLabelsParameter = cantLabels.HasValue ?
                new ObjectParameter("cantLabels", cantLabels) :
                new ObjectParameter("cantLabels", typeof(int));
    
            var idFlxParameter = idFlx.HasValue ?
                new ObjectParameter("idFlx", idFlx) :
                new ObjectParameter("idFlx", typeof(int));
    
            var idColorParameter = idColor.HasValue ?
                new ObjectParameter("idColor", idColor) :
                new ObjectParameter("idColor", typeof(int));
    
            var idVoltParameter = idVolt.HasValue ?
                new ObjectParameter("idVolt", idVolt) :
                new ObjectParameter("idVolt", typeof(int));
    
            var idRevParameter = idRev.HasValue ?
                new ObjectParameter("idRev", idRev) :
                new ObjectParameter("idRev", typeof(int));
    
            var dateParameter = date != null ?
                new ObjectParameter("date", date) :
                new ObjectParameter("date", typeof(string));
    
            var initFolioParameter = initFolio.HasValue ?
                new ObjectParameter("initFolio", initFolio) :
                new ObjectParameter("initFolio", typeof(int));
    
            var idSideParameter = idSide.HasValue ?
                new ObjectParameter("idSide", idSide) :
                new ObjectParameter("idSide", typeof(int));
    
            var idFlx1Parameter = idFlx1.HasValue ?
                new ObjectParameter("idFlx1", idFlx1) :
                new ObjectParameter("idFlx1", typeof(int));
    
            var idVolt1Parameter = idVolt1.HasValue ?
                new ObjectParameter("idVolt1", idVolt1) :
                new ObjectParameter("idVolt1", typeof(int));
    
            var idColor1Parameter = idColor1.HasValue ?
                new ObjectParameter("idColor1", idColor1) :
                new ObjectParameter("idColor1", typeof(int));
    
            var idModelParameter = idModel.HasValue ?
                new ObjectParameter("idModel", idModel) :
                new ObjectParameter("idModel", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<generateSerialsByDJ_LED_2V3_Result>("generateSerialsByDJ_LED_2V3", djGroupParameter, cantLabelsParameter, idFlxParameter, idColorParameter, idVoltParameter, idRevParameter, dateParameter, initFolioParameter, idSideParameter, idFlx1Parameter, idVolt1Parameter, idColor1Parameter, idModelParameter);
        }
    
        public virtual ObjectResult<getGeneratedSerialsByDJ_LED2_V2_Result> getGeneratedSerialsByDJ_LED2_V2(string djGroup, Nullable<int> printedFolio, Nullable<int> idSide, Nullable<int> idModel)
        {
            var djGroupParameter = djGroup != null ?
                new ObjectParameter("djGroup", djGroup) :
                new ObjectParameter("djGroup", typeof(string));
    
            var printedFolioParameter = printedFolio.HasValue ?
                new ObjectParameter("printedFolio", printedFolio) :
                new ObjectParameter("printedFolio", typeof(int));
    
            var idSideParameter = idSide.HasValue ?
                new ObjectParameter("idSide", idSide) :
                new ObjectParameter("idSide", typeof(int));
    
            var idModelParameter = idModel.HasValue ?
                new ObjectParameter("idModel", idModel) :
                new ObjectParameter("idModel", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getGeneratedSerialsByDJ_LED2_V2_Result>("getGeneratedSerialsByDJ_LED2_V2", djGroupParameter, printedFolioParameter, idSideParameter, idModelParameter);
        }
    
        public virtual ObjectResult<getMaxSerialLed2ByDjV3_Result> getMaxSerialLed2ByDjV3(string djGroup, Nullable<int> idModel, Nullable<int> side)
        {
            var djGroupParameter = djGroup != null ?
                new ObjectParameter("djGroup", djGroup) :
                new ObjectParameter("djGroup", typeof(string));
    
            var idModelParameter = idModel.HasValue ?
                new ObjectParameter("idModel", idModel) :
                new ObjectParameter("idModel", typeof(int));
    
            var sideParameter = side.HasValue ?
                new ObjectParameter("side", side) :
                new ObjectParameter("side", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getMaxSerialLed2ByDjV3_Result>("getMaxSerialLed2ByDjV3", djGroupParameter, idModelParameter, sideParameter);
        }
    
        public virtual ObjectResult<getLastSerialBDJ_Result> getLastSerialBDJ(string djGroup)
        {
            var djGroupParameter = djGroup != null ?
                new ObjectParameter("djGroup", djGroup) :
                new ObjectParameter("djGroup", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getLastSerialBDJ_Result>("getLastSerialBDJ", djGroupParameter);
        }
    
        public virtual ObjectResult<getLastSerialBDJLed2_Result> getLastSerialBDJLed2(string djGroup)
        {
            var djGroupParameter = djGroup != null ?
                new ObjectParameter("djGroup", djGroup) :
                new ObjectParameter("djGroup", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getLastSerialBDJLed2_Result>("getLastSerialBDJLed2", djGroupParameter);
        }
    
        public virtual ObjectResult<getLastSerialBDJLed2V2_Result> getLastSerialBDJLed2V2(string djGroup, Nullable<int> idModel)
        {
            var djGroupParameter = djGroup != null ?
                new ObjectParameter("djGroup", djGroup) :
                new ObjectParameter("djGroup", typeof(string));
    
            var idModelParameter = idModel.HasValue ?
                new ObjectParameter("idModel", idModel) :
                new ObjectParameter("idModel", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getLastSerialBDJLed2V2_Result>("getLastSerialBDJLed2V2", djGroupParameter, idModelParameter);
        }
    
        public virtual ObjectResult<updateLblPositionHor_Result> updateLblPositionHor(Nullable<int> idModel, Nullable<int> idUser, Nullable<int> value)
        {
            var idModelParameter = idModel.HasValue ?
                new ObjectParameter("idModel", idModel) :
                new ObjectParameter("idModel", typeof(int));
    
            var idUserParameter = idUser.HasValue ?
                new ObjectParameter("idUser", idUser) :
                new ObjectParameter("idUser", typeof(int));
    
            var valueParameter = value.HasValue ?
                new ObjectParameter("value", value) :
                new ObjectParameter("value", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<updateLblPositionHor_Result>("updateLblPositionHor", idModelParameter, idUserParameter, valueParameter);
        }
    
        public virtual ObjectResult<updateLblPositionVert_Result> updateLblPositionVert(Nullable<int> idModel, Nullable<int> idUser, Nullable<int> value)
        {
            var idModelParameter = idModel.HasValue ?
                new ObjectParameter("idModel", idModel) :
                new ObjectParameter("idModel", typeof(int));
    
            var idUserParameter = idUser.HasValue ?
                new ObjectParameter("idUser", idUser) :
                new ObjectParameter("idUser", typeof(int));
    
            var valueParameter = value.HasValue ?
                new ObjectParameter("value", value) :
                new ObjectParameter("value", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<updateLblPositionVert_Result>("updateLblPositionVert", idModelParameter, idUserParameter, valueParameter);
        }
    
        public virtual ObjectResult<getBinesDJFromOracle_Result> getBinesDJFromOracle(string djGroup)
        {
            var djGroupParameter = djGroup != null ?
                new ObjectParameter("djGroup", djGroup) :
                new ObjectParameter("djGroup", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getBinesDJFromOracle_Result>("getBinesDJFromOracle", djGroupParameter);
        }
    
        public virtual ObjectResult<getBinesDJFromOracleV2_Result> getBinesDJFromOracleV2(string djGroup, Nullable<int> idModel)
        {
            var djGroupParameter = djGroup != null ?
                new ObjectParameter("djGroup", djGroup) :
                new ObjectParameter("djGroup", typeof(string));
    
            var idModelParameter = idModel.HasValue ?
                new ObjectParameter("idModel", idModel) :
                new ObjectParameter("idModel", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getBinesDJFromOracleV2_Result>("getBinesDJFromOracleV2", djGroupParameter, idModelParameter);
        }
    
        public virtual ObjectResult<getLastSerialLed2_V2_Result> getLastSerialLed2_V2(Nullable<int> idModel)
        {
            var idModelParameter = idModel.HasValue ?
                new ObjectParameter("idModel", idModel) :
                new ObjectParameter("idModel", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getLastSerialLed2_V2_Result>("getLastSerialLed2_V2", idModelParameter);
        }
    
        public virtual ObjectResult<getGeneratedSerialsByDJ_LED2_V3_Result> getGeneratedSerialsByDJ_LED2_V3(string djGroup, Nullable<int> printedFolio, Nullable<int> idSide, Nullable<int> idModel)
        {
            var djGroupParameter = djGroup != null ?
                new ObjectParameter("djGroup", djGroup) :
                new ObjectParameter("djGroup", typeof(string));
    
            var printedFolioParameter = printedFolio.HasValue ?
                new ObjectParameter("printedFolio", printedFolio) :
                new ObjectParameter("printedFolio", typeof(int));
    
            var idSideParameter = idSide.HasValue ?
                new ObjectParameter("idSide", idSide) :
                new ObjectParameter("idSide", typeof(int));
    
            var idModelParameter = idModel.HasValue ?
                new ObjectParameter("idModel", idModel) :
                new ObjectParameter("idModel", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getGeneratedSerialsByDJ_LED2_V3_Result>("getGeneratedSerialsByDJ_LED2_V3", djGroupParameter, printedFolioParameter, idSideParameter, idModelParameter);
        }
    
        public virtual int generateSerialsByDJ_LED_2V4(string djGroup, Nullable<int> cantLabels, Nullable<int> idFlx, Nullable<int> idColor, Nullable<int> idVolt, Nullable<int> idRev, string date, Nullable<int> initFolio, Nullable<int> idSide, Nullable<int> idFlx1, Nullable<int> idVolt1, Nullable<int> idColor1, Nullable<int> idModel)
        {
            var djGroupParameter = djGroup != null ?
                new ObjectParameter("djGroup", djGroup) :
                new ObjectParameter("djGroup", typeof(string));
    
            var cantLabelsParameter = cantLabels.HasValue ?
                new ObjectParameter("cantLabels", cantLabels) :
                new ObjectParameter("cantLabels", typeof(int));
    
            var idFlxParameter = idFlx.HasValue ?
                new ObjectParameter("idFlx", idFlx) :
                new ObjectParameter("idFlx", typeof(int));
    
            var idColorParameter = idColor.HasValue ?
                new ObjectParameter("idColor", idColor) :
                new ObjectParameter("idColor", typeof(int));
    
            var idVoltParameter = idVolt.HasValue ?
                new ObjectParameter("idVolt", idVolt) :
                new ObjectParameter("idVolt", typeof(int));
    
            var idRevParameter = idRev.HasValue ?
                new ObjectParameter("idRev", idRev) :
                new ObjectParameter("idRev", typeof(int));
    
            var dateParameter = date != null ?
                new ObjectParameter("date", date) :
                new ObjectParameter("date", typeof(string));
    
            var initFolioParameter = initFolio.HasValue ?
                new ObjectParameter("initFolio", initFolio) :
                new ObjectParameter("initFolio", typeof(int));
    
            var idSideParameter = idSide.HasValue ?
                new ObjectParameter("idSide", idSide) :
                new ObjectParameter("idSide", typeof(int));
    
            var idFlx1Parameter = idFlx1.HasValue ?
                new ObjectParameter("idFlx1", idFlx1) :
                new ObjectParameter("idFlx1", typeof(int));
    
            var idVolt1Parameter = idVolt1.HasValue ?
                new ObjectParameter("idVolt1", idVolt1) :
                new ObjectParameter("idVolt1", typeof(int));
    
            var idColor1Parameter = idColor1.HasValue ?
                new ObjectParameter("idColor1", idColor1) :
                new ObjectParameter("idColor1", typeof(int));
    
            var idModelParameter = idModel.HasValue ?
                new ObjectParameter("idModel", idModel) :
                new ObjectParameter("idModel", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("generateSerialsByDJ_LED_2V4", djGroupParameter, cantLabelsParameter, idFlxParameter, idColorParameter, idVoltParameter, idRevParameter, dateParameter, initFolioParameter, idSideParameter, idFlx1Parameter, idVolt1Parameter, idColor1Parameter, idModelParameter);
        }
    
        public virtual ObjectResult<generateWabcoSerials_Result> generateWabcoSerials(string djGroup, Nullable<int> cantLabels, Nullable<int> idFlx, Nullable<int> idColor, Nullable<int> idVolt, Nullable<int> idRev, string date, Nullable<int> initFolio, Nullable<int> idSide, Nullable<int> idFlx1, Nullable<int> idVolt1, Nullable<int> idColor1, Nullable<int> idModel)
        {
            var djGroupParameter = djGroup != null ?
                new ObjectParameter("djGroup", djGroup) :
                new ObjectParameter("djGroup", typeof(string));
    
            var cantLabelsParameter = cantLabels.HasValue ?
                new ObjectParameter("cantLabels", cantLabels) :
                new ObjectParameter("cantLabels", typeof(int));
    
            var idFlxParameter = idFlx.HasValue ?
                new ObjectParameter("idFlx", idFlx) :
                new ObjectParameter("idFlx", typeof(int));
    
            var idColorParameter = idColor.HasValue ?
                new ObjectParameter("idColor", idColor) :
                new ObjectParameter("idColor", typeof(int));
    
            var idVoltParameter = idVolt.HasValue ?
                new ObjectParameter("idVolt", idVolt) :
                new ObjectParameter("idVolt", typeof(int));
    
            var idRevParameter = idRev.HasValue ?
                new ObjectParameter("idRev", idRev) :
                new ObjectParameter("idRev", typeof(int));
    
            var dateParameter = date != null ?
                new ObjectParameter("date", date) :
                new ObjectParameter("date", typeof(string));
    
            var initFolioParameter = initFolio.HasValue ?
                new ObjectParameter("initFolio", initFolio) :
                new ObjectParameter("initFolio", typeof(int));
    
            var idSideParameter = idSide.HasValue ?
                new ObjectParameter("idSide", idSide) :
                new ObjectParameter("idSide", typeof(int));
    
            var idFlx1Parameter = idFlx1.HasValue ?
                new ObjectParameter("idFlx1", idFlx1) :
                new ObjectParameter("idFlx1", typeof(int));
    
            var idVolt1Parameter = idVolt1.HasValue ?
                new ObjectParameter("idVolt1", idVolt1) :
                new ObjectParameter("idVolt1", typeof(int));
    
            var idColor1Parameter = idColor1.HasValue ?
                new ObjectParameter("idColor1", idColor1) :
                new ObjectParameter("idColor1", typeof(int));
    
            var idModelParameter = idModel.HasValue ?
                new ObjectParameter("idModel", idModel) :
                new ObjectParameter("idModel", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<generateWabcoSerials_Result>("generateWabcoSerials", djGroupParameter, cantLabelsParameter, idFlxParameter, idColorParameter, idVoltParameter, idRevParameter, dateParameter, initFolioParameter, idSideParameter, idFlx1Parameter, idVolt1Parameter, idColor1Parameter, idModelParameter);
        }
    
        public virtual ObjectResult<getLaserDjs_Result> getLaserDjs(string fechaIni, string fechaFin)
        {
            var fechaIniParameter = fechaIni != null ?
                new ObjectParameter("fechaIni", fechaIni) :
                new ObjectParameter("fechaIni", typeof(string));
    
            var fechaFinParameter = fechaFin != null ?
                new ObjectParameter("fechaFin", fechaFin) :
                new ObjectParameter("fechaFin", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getLaserDjs_Result>("getLaserDjs", fechaIniParameter, fechaFinParameter);
        }
    
        public virtual ObjectResult<checkPartLSM_Result> checkPartLSM(Nullable<int> idmodel, string djGroup, Nullable<int> qtyPCB, Nullable<int> idFlx, Nullable<int> idColor, Nullable<int> idVolt)
        {
            var idmodelParameter = idmodel.HasValue ?
                new ObjectParameter("idmodel", idmodel) :
                new ObjectParameter("idmodel", typeof(int));
    
            var djGroupParameter = djGroup != null ?
                new ObjectParameter("djGroup", djGroup) :
                new ObjectParameter("djGroup", typeof(string));
    
            var qtyPCBParameter = qtyPCB.HasValue ?
                new ObjectParameter("qtyPCB", qtyPCB) :
                new ObjectParameter("qtyPCB", typeof(int));
    
            var idFlxParameter = idFlx.HasValue ?
                new ObjectParameter("idFlx", idFlx) :
                new ObjectParameter("idFlx", typeof(int));
    
            var idColorParameter = idColor.HasValue ?
                new ObjectParameter("idColor", idColor) :
                new ObjectParameter("idColor", typeof(int));
    
            var idVoltParameter = idVolt.HasValue ?
                new ObjectParameter("idVolt", idVolt) :
                new ObjectParameter("idVolt", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<checkPartLSM_Result>("checkPartLSM", idmodelParameter, djGroupParameter, qtyPCBParameter, idFlxParameter, idColorParameter, idVoltParameter);
        }
    
        public virtual ObjectResult<generateLaserSerials_Result> generateLaserSerials(string djGroup, Nullable<int> cantLabels, Nullable<int> idFlx, Nullable<int> idColor, Nullable<int> idVolt, Nullable<int> idRev, string date, Nullable<int> initFolio, Nullable<int> idSide, Nullable<int> idFlx1, Nullable<int> idVolt1, Nullable<int> idColor1, Nullable<int> idModel)
        {
            var djGroupParameter = djGroup != null ?
                new ObjectParameter("djGroup", djGroup) :
                new ObjectParameter("djGroup", typeof(string));
    
            var cantLabelsParameter = cantLabels.HasValue ?
                new ObjectParameter("cantLabels", cantLabels) :
                new ObjectParameter("cantLabels", typeof(int));
    
            var idFlxParameter = idFlx.HasValue ?
                new ObjectParameter("idFlx", idFlx) :
                new ObjectParameter("idFlx", typeof(int));
    
            var idColorParameter = idColor.HasValue ?
                new ObjectParameter("idColor", idColor) :
                new ObjectParameter("idColor", typeof(int));
    
            var idVoltParameter = idVolt.HasValue ?
                new ObjectParameter("idVolt", idVolt) :
                new ObjectParameter("idVolt", typeof(int));
    
            var idRevParameter = idRev.HasValue ?
                new ObjectParameter("idRev", idRev) :
                new ObjectParameter("idRev", typeof(int));
    
            var dateParameter = date != null ?
                new ObjectParameter("date", date) :
                new ObjectParameter("date", typeof(string));
    
            var initFolioParameter = initFolio.HasValue ?
                new ObjectParameter("initFolio", initFolio) :
                new ObjectParameter("initFolio", typeof(int));
    
            var idSideParameter = idSide.HasValue ?
                new ObjectParameter("idSide", idSide) :
                new ObjectParameter("idSide", typeof(int));
    
            var idFlx1Parameter = idFlx1.HasValue ?
                new ObjectParameter("idFlx1", idFlx1) :
                new ObjectParameter("idFlx1", typeof(int));
    
            var idVolt1Parameter = idVolt1.HasValue ?
                new ObjectParameter("idVolt1", idVolt1) :
                new ObjectParameter("idVolt1", typeof(int));
    
            var idColor1Parameter = idColor1.HasValue ?
                new ObjectParameter("idColor1", idColor1) :
                new ObjectParameter("idColor1", typeof(int));
    
            var idModelParameter = idModel.HasValue ?
                new ObjectParameter("idModel", idModel) :
                new ObjectParameter("idModel", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<generateLaserSerials_Result>("generateLaserSerials", djGroupParameter, cantLabelsParameter, idFlxParameter, idColorParameter, idVoltParameter, idRevParameter, dateParameter, initFolioParameter, idSideParameter, idFlx1Parameter, idVolt1Parameter, idColor1Parameter, idModelParameter);
        }
    
        public virtual ObjectResult<getLastSerialBDJLaserM_Result> getLastSerialBDJLaserM(string djGroup, Nullable<int> idModel)
        {
            var djGroupParameter = djGroup != null ?
                new ObjectParameter("djGroup", djGroup) :
                new ObjectParameter("djGroup", typeof(string));
    
            var idModelParameter = idModel.HasValue ?
                new ObjectParameter("idModel", idModel) :
                new ObjectParameter("idModel", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getLastSerialBDJLaserM_Result>("getLastSerialBDJLaserM", djGroupParameter, idModelParameter);
        }
    
        public virtual ObjectResult<getLastSerialLaserMark_Result> getLastSerialLaserMark(Nullable<int> idModel)
        {
            var idModelParameter = idModel.HasValue ?
                new ObjectParameter("idModel", idModel) :
                new ObjectParameter("idModel", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getLastSerialLaserMark_Result>("getLastSerialLaserMark", idModelParameter);
        }
    
        public virtual ObjectResult<getMaxSerialLaserM_Result> getMaxSerialLaserM(string djGroup, Nullable<int> idModel, Nullable<int> side)
        {
            var djGroupParameter = djGroup != null ?
                new ObjectParameter("djGroup", djGroup) :
                new ObjectParameter("djGroup", typeof(string));
    
            var idModelParameter = idModel.HasValue ?
                new ObjectParameter("idModel", idModel) :
                new ObjectParameter("idModel", typeof(int));
    
            var sideParameter = side.HasValue ?
                new ObjectParameter("side", side) :
                new ObjectParameter("side", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getMaxSerialLaserM_Result>("getMaxSerialLaserM", djGroupParameter, idModelParameter, sideParameter);
        }
    
        public virtual ObjectResult<getGeneratedLaserSerials_Result> getGeneratedLaserSerials(string djGroup, Nullable<int> printedFolio, Nullable<int> idSide, Nullable<int> idModel)
        {
            var djGroupParameter = djGroup != null ?
                new ObjectParameter("djGroup", djGroup) :
                new ObjectParameter("djGroup", typeof(string));
    
            var printedFolioParameter = printedFolio.HasValue ?
                new ObjectParameter("printedFolio", printedFolio) :
                new ObjectParameter("printedFolio", typeof(int));
    
            var idSideParameter = idSide.HasValue ?
                new ObjectParameter("idSide", idSide) :
                new ObjectParameter("idSide", typeof(int));
    
            var idModelParameter = idModel.HasValue ?
                new ObjectParameter("idModel", idModel) :
                new ObjectParameter("idModel", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getGeneratedLaserSerials_Result>("getGeneratedLaserSerials", djGroupParameter, printedFolioParameter, idSideParameter, idModelParameter);
        }
    
        public virtual ObjectResult<getXMLPanel_Result> getXMLPanel(Nullable<int> initSerial, string template, Nullable<int> idModel, string djGroup, Nullable<int> cantLabels, Nullable<int> idFlx, Nullable<int> idColor, Nullable<int> idVolt, Nullable<int> idRev, string date, Nullable<int> idSide, Nullable<int> idFlx1, Nullable<int> idVolt1, Nullable<int> idColor1)
        {
            var initSerialParameter = initSerial.HasValue ?
                new ObjectParameter("initSerial", initSerial) :
                new ObjectParameter("initSerial", typeof(int));
    
            var templateParameter = template != null ?
                new ObjectParameter("template", template) :
                new ObjectParameter("template", typeof(string));
    
            var idModelParameter = idModel.HasValue ?
                new ObjectParameter("idModel", idModel) :
                new ObjectParameter("idModel", typeof(int));
    
            var djGroupParameter = djGroup != null ?
                new ObjectParameter("djGroup", djGroup) :
                new ObjectParameter("djGroup", typeof(string));
    
            var cantLabelsParameter = cantLabels.HasValue ?
                new ObjectParameter("cantLabels", cantLabels) :
                new ObjectParameter("cantLabels", typeof(int));
    
            var idFlxParameter = idFlx.HasValue ?
                new ObjectParameter("idFlx", idFlx) :
                new ObjectParameter("idFlx", typeof(int));
    
            var idColorParameter = idColor.HasValue ?
                new ObjectParameter("idColor", idColor) :
                new ObjectParameter("idColor", typeof(int));
    
            var idVoltParameter = idVolt.HasValue ?
                new ObjectParameter("idVolt", idVolt) :
                new ObjectParameter("idVolt", typeof(int));
    
            var idRevParameter = idRev.HasValue ?
                new ObjectParameter("idRev", idRev) :
                new ObjectParameter("idRev", typeof(int));
    
            var dateParameter = date != null ?
                new ObjectParameter("date", date) :
                new ObjectParameter("date", typeof(string));
    
            var idSideParameter = idSide.HasValue ?
                new ObjectParameter("idSide", idSide) :
                new ObjectParameter("idSide", typeof(int));
    
            var idFlx1Parameter = idFlx1.HasValue ?
                new ObjectParameter("idFlx1", idFlx1) :
                new ObjectParameter("idFlx1", typeof(int));
    
            var idVolt1Parameter = idVolt1.HasValue ?
                new ObjectParameter("idVolt1", idVolt1) :
                new ObjectParameter("idVolt1", typeof(int));
    
            var idColor1Parameter = idColor1.HasValue ?
                new ObjectParameter("idColor1", idColor1) :
                new ObjectParameter("idColor1", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getXMLPanel_Result>("getXMLPanel", initSerialParameter, templateParameter, idModelParameter, djGroupParameter, cantLabelsParameter, idFlxParameter, idColorParameter, idVoltParameter, idRevParameter, dateParameter, idSideParameter, idFlx1Parameter, idVolt1Parameter, idColor1Parameter);
        }
    
        public virtual ObjectResult<isPrinted_Result> isPrinted(string djGroup, Nullable<int> id_MODEL)
        {
            var djGroupParameter = djGroup != null ?
                new ObjectParameter("djGroup", djGroup) :
                new ObjectParameter("djGroup", typeof(string));
    
            var id_MODELParameter = id_MODEL.HasValue ?
                new ObjectParameter("id_MODEL", id_MODEL) :
                new ObjectParameter("id_MODEL", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<isPrinted_Result>("isPrinted", djGroupParameter, id_MODELParameter);
        }
    }
}
